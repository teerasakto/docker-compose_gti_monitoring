{"version":3,"sources":["../src/rendering.js"],"names":["link","scope","elem","attrs","ctrl","data","cardsData","timeRange","panel","heatmap","$heatmap","find","tooltip","StatusHeatmapTooltip","width","height","yScale","xScale","chartWidth","chartHeight","chartTop","chartBottom","yAxisWidth","xAxisHeight","cardVSpacing","cardHSpacing","cardRound","cardWidth","cardHeight","colorScale","opacityScale","mouseUpHandler","xGridSize","yGridSize","yOffset","selection","active","x1","x2","padding","left","right","top","bottom","margin","dataRangeWidingFactor","DATA_RANGE_WIDING_FACTOR","events","on","render","setElementHeight","row","_","isString","parseInt","replace","legend","show","css","e","getYAxisWidth","axis_text","selectAll","nodes","max_text_width","max","map","text","getBBox","getXAxisHeight","axis_line","select","empty","axis_line_position","parseFloat","attr","canvas_width","addXAxis","d3","scaleTime","domain","from","to","range","ticks","DEFAULT_X_TICK_SIZE_PX","grafanaTimeFormatter","grafanaTimeFormat","timeFormat","dashboardTimeZone","dashboard","getTimezone","utcFormat","xAxis","axisBottom","tickFormat","tickPadding","X_AXIS_TICK_PADDING","tickSize","posY","posX","append","call","remove","getYScale","step","length","push","i","scaleOrdinal","getYAxisScale","addYAxis","uniq","d","target","isEmpty","yAxisSort","sort","a","b","localeCompare","ignorePunctuation","numeric","yAxisScale","yAxis","axisLeft","tickValues","tickSizeInner","Y_AXIS_TICK_PADDING","wideYAxisRange","min","tickInterval","y_widing","y_min","y_max","Math","ceil","floor","tickValueFormatter","decimals","scaledDecimals","format","value","kbn","valueFormats","addHeatmapCanvas","heatmap_elem","cards","CARD_H_SPACING","CARD_V_SPACING","CARD_ROUND","yBucketSize","xBucketSize","style","addHeatmap","maxValue","color","minValue","mode","getColorScale","setOpacityScale","enter","c","id","getCardX","getCardWidth","getCardY","getCardHeight","getCardColor","getCardOpacity","$cards","event","mouseOverBucket","highlightCard","resetCardHighLight","emit","highlightColor","darker","strokeColor","brighter","current_card","originalFillColor","colorScheme","colorSchemes","colorInterpolator","d3ScaleChromatic","colorScaleInverted","invert","contextSrv","user","lightTheme","start","end","scaleSequential","scaleLinear","scalePow","exponent","x","cx","w","cutted_width","MIN_CARD_SIZE","y","ys","h","cardColor","discreteHelper","getBucketColor","values","nullPointMode","getCardStrokeWidth","appEvents","drawSharedCrosshair","pos","clearCrosshair","onMouseDown","offsetX","onMouseUp","$","document","one","unbind","selectionRange","abs","MIN_SELECTION_WIDTH","timeFrom","timeTo","timeSrv","setTime","moment","utc","clearSelection","onMouseLeave","onMouseMove","destroy","limitSelection","drawSelection","emitGraphHoverEvet","drawCrosshair","valueOf","offsetY","pageX","pageY","y1","panelRelY","posX1","posX2","selectionX","selectionWidth","position","graphTooltip","secPerTick","oneDay","oneYear","tickStep","getScaledDecimals","getFlotTickSize","DEFAULT_Y_TICK_SIZE_PX"],"mappings":";;;;;;;AAqBe,WAASA,IAAT,CAAcC,KAAd,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwC;AACrD,QAAIC,aAAJ;AAAA,QAAUC,kBAAV;AAAA,QAAqBC,kBAArB;AAAA,QAAgCC,cAAhC;AAAA,QAAuCC,gBAAvC;;AAEA;AACA,QAAIC,WAAWR,KAAKS,IAAL,CAAU,uBAAV,CAAf;AACA,QAAIC,UAAU,IAAIC,oBAAJ,CAAyBH,QAAzB,EAAmCT,KAAnC,CAAd;;AAEA,QAAIa,cAAJ;AAAA,QAAWC,eAAX;AAAA,QACIC,eADJ;AAAA,QACYC,eADZ;AAAA,QAEIC,mBAFJ;AAAA,QAEgBC,oBAFhB;AAAA,QAGIC,iBAHJ;AAAA,QAGcC,oBAHd;AAAA,QAIIC,mBAJJ;AAAA,QAIgBC,oBAJhB;AAAA,QAKIC,qBALJ;AAAA,QAKkBC,qBALlB;AAAA,QAKgCC,kBALhC;AAAA,QAMIC,kBANJ;AAAA,QAMeC,mBANf;AAAA,QAOIC,mBAPJ;AAAA,QAOgBC,qBAPhB;AAAA,QAQIC,uBARJ;AAAA,QASIC,kBATJ;AAAA,QASeC,kBATf;;AAWA,QAAIC,UAAU,CAAd;;AAEA,QAAIC,YAAY;AACdC,cAAQ,KADM;AAEdC,UAAI,CAAC,CAFS;AAGdC,UAAI,CAAC;AAHS,KAAhB;;AAMA,QAAIC,UAAU,EAACC,MAAM,CAAP,EAAUC,OAAO,CAAjB,EAAoBC,KAAK,CAAzB,EAA4BC,QAAQ,CAApC,EAAd;AAAA,QACIC,SAAS,EAACJ,MAAM,EAAP,EAAWC,OAAO,EAAlB,EAAsBC,KAAK,EAA3B,EAA+BC,QAAQ,EAAvC,EADb;AAAA,QAEIE,wBAAwBC,wBAF5B;;AAIA1C,SAAK2C,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAM;AAC7BC;AACD,KAFD;;AAIA,aAASC,gBAAT,GAA4B;AAC1B,UAAI;AACF,YAAInC,SAASX,KAAKW,MAAL,IAAeP,MAAMO,MAArB,IAA+BX,KAAK+C,GAAL,CAASpC,MAArD;AACA,YAAIqC,EAAEC,QAAF,CAAWtC,MAAX,CAAJ,EAAwB;AACtBA,mBAASuC,SAASvC,OAAOwC,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAT,EAAmC,EAAnC,CAAT;AACD;;AAEDxC,kBAAUP,MAAMgD,MAAN,CAAaC,IAAb,GAAoB,EAApB,GAAyB,EAAnC,CANE,CAMqC;;AAEvC/C,iBAASgD,GAAT,CAAa,QAAb,EAAuB3C,SAAS,IAAhC;;AAEA,eAAO,IAAP;AACD,OAXD,CAWE,OAAO4C,CAAP,EAAU;AAAE;AACZ,eAAO,KAAP;AACD;AACF;;AAED,aAASC,aAAT,CAAuB1D,IAAvB,EAA6B;AAC3B,UAAI2D,YAAY3D,KAAK4D,SAAL,CAAe,cAAf,EAA+BC,KAA/B,EAAhB;AACA,UAAIC,iBAAiBZ,EAAEa,GAAF,CAAMb,EAAEc,GAAF,CAAML,SAAN,EAAiB,gBAAQ;AAClD;AACA,eAAOM,KAAKC,OAAL,GAAetD,KAAtB;AACD,OAH0B,CAAN,CAArB;;AAKA,aAAOkD,cAAP;AACD;;AAED,aAASK,cAAT,CAAwBnE,IAAxB,EAA8B;AAC5B,UAAIoE,YAAYpE,KAAKqE,MAAL,CAAY,cAAZ,CAAhB;AACA,UAAI,CAACD,UAAUE,KAAV,EAAL,EAAwB;AACtB,YAAIC,qBAAqBC,WAAWxE,KAAKqE,MAAL,CAAY,cAAZ,EAA4BI,IAA5B,CAAiC,IAAjC,CAAX,CAAzB;AACA,YAAIC,eAAeF,WAAWxE,KAAKyE,IAAL,CAAU,QAAV,CAAX,CAAnB;AACA,eAAOC,eAAeH,kBAAtB;AACD,OAJD,MAIO;AACL;AACA,eAAO,EAAP;AACD;AACF;;AAED,aAASI,QAAT,GAAoB;AAClB;AACA5E,YAAMgB,MAAN,GAAeA,SAAS6D,GAAGC,SAAH,GACrBC,MADqB,CACd,CAACzE,UAAU0E,IAAX,EAAiB1E,UAAU2E,EAA3B,CADc,EAErBC,KAFqB,CAEf,CAACnD,YAAU,CAAX,EAAcd,aAAWc,YAAU,CAAnC,CAFe,CAAxB;;AAIA,UAAIoD,QAAQlE,aAAamE,sBAAzB;AACA,UAAIC,uBAAuBC,kBAAkBH,KAAlB,EAAyB7E,UAAU0E,IAAnC,EAAyC1E,UAAU2E,EAAnD,CAA3B;AACA,UAAIM,mBAAJ;AACA,UAAIC,oBAAoBrF,KAAKsF,SAAL,CAAeC,WAAf,EAAxB;AACA,UAAIF,sBAAsB,KAA1B,EAAiC;AAC/BD,qBAAaV,GAAGc,SAAH,CAAaN,oBAAb,CAAb;AACD,OAFD,MAEO;AACLE,qBAAaV,GAAGU,UAAH,CAAcF,oBAAd,CAAb;AACD;;AAED,UAAIO,QAAQf,GAAGgB,UAAH,CAAc7E,MAAd,EACTmE,KADS,CACHA,KADG,EAETW,UAFS,CAEEP,UAFF,EAGTQ,WAHS,CAGGC,mBAHH,EAITC,QAJS,CAIA/E,WAJA,CAAZ;;AAMA,UAAIgF,OAAO/E,QAAX;AACA,UAAIgF,OAAO9E,UAAX;;AAEAb,cAAQ4F,MAAR,CAAe,GAAf,EACG1B,IADH,CACQ,OADR,EACiB,aADjB,EAEGA,IAFH,CAEQ,WAFR,EAEqB,eAAeyB,IAAf,GAAsB,GAAtB,GAA4BD,IAA5B,GAAmC,GAFxD,EAGGG,IAHH,CAGQT,KAHR;;AAKA;AACApF,cAAQ8D,MAAR,CAAe,SAAf,EAA0BA,MAA1B,CAAiC,SAAjC,EAA4CgC,MAA5C;AACD;;AAED;AACA,aAASC,SAAT,CAAmBpB,KAAnB,EAA0B;AACxB,UAAID,QAAQ,EAAZ;AACA,UAAIsB,OAAOtF,cAAciE,MAAMsB,MAA/B;AACA;AACAvB,YAAMwB,IAAN,CAAWF,IAAX;AACA,WAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIxB,MAAMsB,MAA1B,EAAkCE,GAAlC,EAAuC;AACrCzB,cAAMwB,IAAN,CAAWF,QAAQG,IAAE,CAAV,CAAX;AACD;AACD,aAAO9B,GAAG+B,YAAH,GACJ7B,MADI,CACGI,KADH,EAEJD,KAFI,CAEEA,KAFF,CAAP;AAGD;;AAED;AACA,aAAS2B,aAAT,CAAuB1B,KAAvB,EAA8B;AAC5B,UAAID,QAAQ,EAAZ;AACA,UAAIsB,OAAOtF,cAAciE,MAAMsB,MAA/B;AACA;AACAvB,YAAMwB,IAAN,CAAWzE,OAAX;AACA,WAAK,IAAI0E,IAAI,CAAb,EAAgBA,IAAIxB,MAAMsB,MAA1B,EAAkCE,GAAlC,EAAuC;AACrCzB,cAAMwB,IAAN,CAAWF,OAAOG,CAAP,GAAW1E,OAAtB;AACD;AACD,aAAO4C,GAAG+B,YAAH,GACJ7B,MADI,CACGI,KADH,EAEJD,KAFI,CAEEA,KAFF,CAAP;AAGD;;AAED,aAAS4B,QAAT,GAAoB;AAClB,UAAI3B,QAAQhC,EAAE4D,IAAF,CAAO5D,EAAEc,GAAF,CAAM7D,IAAN,EAAY;AAAA,eAAK4G,EAAEC,MAAP;AAAA,OAAZ,CAAP,CAAZ;;AAEA;AACA,UAAI9D,EAAE+D,OAAF,CAAU9G,IAAV,CAAJ,EAAqB;AACnB+E,gBAAQ,CAAC,EAAD,CAAR;AACD;;AAED,UAAI5E,MAAM4G,SAAN,IAAmB,OAAvB,EAAgC;AAC9BhC,cAAMiC,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,EAAEE,aAAF,CAAgBD,CAAhB,EAAmB,IAAnB,EAAyB,EAACE,mBAAmB,KAApB,EAA2BC,SAAS,IAApC,EAAzB,CAAV;AAAA,SAAX;AACD,OAFD,MAEO,IAAIlH,MAAM4G,SAAN,IAAmB,OAAvB,EAAgC;AACrChC,cAAMiC,IAAN,CAAW,UAACE,CAAD,EAAID,CAAJ;AAAA,iBAAUA,EAAEE,aAAF,CAAgBD,CAAhB,EAAmB,IAAnB,EAAyB,EAACE,mBAAmB,KAApB,EAA2BC,SAAS,IAApC,EAAzB,CAAV;AAAA,SAAX;AACD;;AAED,UAAIC,aAAab,cAAc1B,KAAd,CAAjB;AACAnF,YAAMe,MAAN,GAAeA,SAASwF,UAAUpB,KAAV,CAAxB;;AAEA,UAAIwC,QAAQ9C,GAAG+C,QAAH,CAAYF,UAAZ,EACTG,UADS,CACE1C,KADF,EAET2C,aAFS,CAEK,IAAIjH,KAFT,EAGTkF,WAHS,CAGGgC,mBAHH,CAAZ;;AAKAvH,cAAQ4F,MAAR,CAAe,GAAf,EACG1B,IADH,CACQ,OADR,EACiB,aADjB,EAEG2B,IAFH,CAEQsB,KAFR;;AAIA;AACA,UAAIzB,OAAOvD,OAAOF,GAAlB;AACA,UAAI0D,OAAOxC,cAAcnD,OAAd,IAAyBuH,mBAApC;AACAvH,cAAQ8D,MAAR,CAAe,SAAf,EAA0BI,IAA1B,CAA+B,WAA/B,EAA4C,eAAeyB,IAAf,GAAsB,GAAtB,GAA4BD,IAA5B,GAAmC,GAA/E;;AAEA;AACA1F,cAAQ8D,MAAR,CAAe,SAAf,EAA0BA,MAA1B,CAAiC,SAAjC,EAA4CgC,MAA5C;AACA9F,cAAQ8D,MAAR,CAAe,SAAf,EAA0BT,SAA1B,CAAoC,YAApC,EAAkDyC,MAAlD;AACD;;AAED;AACA,aAAS0B,cAAT,CAAwBC,GAAxB,EAA6BjE,GAA7B,EAAkCkE,YAAlC,EAAgD;AAC9C,UAAIC,WAAW,CAACnE,OAAOpB,wBAAwB,CAA/B,IAAoCqF,OAAOrF,wBAAwB,CAA/B,CAArC,IAA0E,CAAzF;AACA,UAAIwF,cAAJ;AAAA,UAAWC,cAAX;;AAEA,UAAIH,iBAAiB,CAArB,EAAwB;AACtBG,gBAAQrE,MAAMpB,qBAAd;AACAwF,gBAAQH,MAAMA,OAAOrF,wBAAwB,CAA/B,CAAd;AACAsF,uBAAe,CAACG,QAAQD,KAAT,IAAkB,CAAjC;AACD,OAJD,MAIO;AACLC,gBAAQC,KAAKC,IAAL,CAAU,CAACvE,MAAMmE,QAAP,IAAmBD,YAA7B,IAA6CA,YAArD;AACAE,gBAAQE,KAAKE,KAAL,CAAW,CAACP,MAAME,QAAP,IAAmBD,YAA9B,IAA8CA,YAAtD;AACD;;AAED;AACA,UAAID,OAAO,CAAP,IAAYG,QAAQ,CAAxB,EAA2B;AACzBA,gBAAQ,CAAR;AACD;;AAED,aAAO,EAACA,YAAD,EAAQC,YAAR,EAAP;AACD;;AAED,aAASI,kBAAT,CAA4BC,QAA5B,EAA6D;AAAA,UAAvBC,cAAuB,uEAAN,IAAM;;AAC3D,UAAIC,SAASrI,MAAMoH,KAAN,CAAYiB,MAAzB;AACA,aAAO,UAASC,KAAT,EAAgB;AACrB,eAAOC,IAAIC,YAAJ,CAAiBH,MAAjB,EAAyBC,KAAzB,EAAgCH,QAAhC,EAA0CC,cAA1C,CAAP;AACD,OAFD;AAGD;;AAED;AACA;AACA,aAASK,gBAAT,GAA4B;AAC1B,UAAIC,eAAexI,SAAS,CAAT,CAAnB;;AAEAI,cAAQyH,KAAKE,KAAL,CAAW/H,SAASI,KAAT,EAAX,IAA+ByB,QAAQE,KAA/C;AACA1B,eAASwH,KAAKE,KAAL,CAAW/H,SAASK,MAAT,EAAX,IAAgCwB,QAAQI,MAAjD;;AAEA,UAAIlC,OAAJ,EAAa;AACXA,gBAAQ8F,MAAR;AACD;;AAED9F,gBAAUqE,GAAGP,MAAH,CAAU2E,YAAV,EACP7C,MADO,CACA,KADA,EAEP1B,IAFO,CAEF,OAFE,EAEO7D,KAFP,EAGP6D,IAHO,CAGF,QAHE,EAGQ5D,MAHR,CAAV;;AAKAI,oBAAcJ,SAAS6B,OAAOF,GAAhB,GAAsBE,OAAOD,MAA3C;AACAvB,iBAAWwB,OAAOF,GAAlB;AACArB,oBAAcD,WAAWD,WAAzB;;AAEAM,qBAAejB,MAAM2I,KAAN,CAAY1H,YAAZ,KAA6B,IAA7B,GAAoCjB,MAAM2I,KAAN,CAAY1H,YAAhD,GAA+D2H,cAA9E;AACA5H,qBAAehB,MAAM2I,KAAN,CAAY3H,YAAZ,KAA6B,IAA7B,GAAoChB,MAAM2I,KAAN,CAAY3H,YAAhD,GAA+D6H,cAA9E;AACA3H,kBAAYlB,MAAM2I,KAAN,CAAYzH,SAAZ,KAA0B,IAA1B,GAAiClB,MAAM2I,KAAN,CAAYzH,SAA7C,GAAyD4H,UAArE;;AAEA;AACArH,kBAAYsG,KAAKE,KAAL,CAAWtH,cAAcb,UAAUiJ,WAAnC,CAAZ;AACA3H,mBAAaK,YAAYA,YAAYT,YAAxB,GAAuC,CAApD;AACAU,gBAAUN,aAAa,CAAvB;;AAEAmF;;AAEAzF,mBAAasC,cAAcnD,OAAd,IAAyBuH,mBAAtC;AACA9G,mBAAaJ,QAAQQ,UAAR,GAAqBsB,OAAOH,KAAzC;;AAEA;AACAT,kBAAYd,cAAcZ,UAAUkJ,WAAV,GAAsB,CAApC,CAAZ;AACA7H,kBAAYK,YAAYP,YAAxB;;AAEAoD;AACAtD,oBAAc8C,eAAe5D,OAAf,CAAd;;AAEA,UAAI,CAACD,MAAMoH,KAAN,CAAYnE,IAAjB,EAAuB;AACrBhD,gBAAQ8D,MAAR,CAAe,SAAf,EAA0BT,SAA1B,CAAoC,MAApC,EAA4C2F,KAA5C,CAAkD,SAAlD,EAA6D,CAA7D;AACD;;AAED,UAAI,CAACjJ,MAAMqF,KAAN,CAAYpC,IAAjB,EAAuB;AACrBhD,gBAAQ8D,MAAR,CAAe,SAAf,EAA0BT,SAA1B,CAAoC,MAApC,EAA4C2F,KAA5C,CAAkD,SAAlD,EAA6D,CAA7D;AACD;AACF;;AAED,aAASC,UAAT,GAAsB;AACpBT;;AAEA,UAAIU,WAAWnJ,MAAMoJ,KAAN,CAAY3F,GAAZ,IAAmB3D,UAAUqJ,QAA5C;AACA,UAAIE,WAAWrJ,MAAMoJ,KAAN,CAAY1B,GAAZ,IAAmB5H,UAAUuJ,QAA5C;;AAEA,UAAIrJ,MAAMoJ,KAAN,CAAYE,IAAZ,KAAqB,UAAzB,EAAqC;AACnCjI,qBAAakI,cAAcJ,QAAd,EAAwBE,QAAxB,CAAb;AACD;AACDG,sBAAgBL,QAAhB;;AAEA,UAAIR,QAAQ1I,QAAQqD,SAAR,CAAkB,sBAAlB,EAA0CzD,IAA1C,CAA+CC,UAAU6I,KAAzD,CAAZ;AACAA,YAAM9C,MAAN,CAAa,OAAb;AACA8C,cAAQA,MAAMc,KAAN,GAAc5D,MAAd,CAAqB,MAArB,EACP1B,IADO,CACF,QADE,EACQ;AAAA,eAAKuF,EAAEC,EAAP;AAAA,OADR,EAEPxF,IAFO,CAEF,GAFE,EAEGyF,QAFH,EAGPzF,IAHO,CAGF,OAHE,EAGO0F,YAHP,EAIP1F,IAJO,CAIF,GAJE,EAIG2F,QAJH,EAKP3F,IALO,CAKF,QALE,EAKQ4F,aALR,EAMP5F,IANO,CAMF,IANE,EAMIjD,SANJ,EAOPiD,IAPO,CAOF,IAPE,EAOIjD,SAPJ,EAQPiD,IARO,CAQF,OARE,EAQO,8BARP,EASP8E,KATO,CASD,MATC,EASOe,YATP,EAUPf,KAVO,CAUD,QAVC,EAUSe,YAVT,EAWPf,KAXO,CAWD,cAXC,EAWe,CAXf;AAYR;AACA;AAbQ,OAcPA,KAdO,CAcD,SAdC,EAcUgB,cAdV,CAAR;;AAgBA,UAAIC,SAAShK,SAASC,IAAT,CAAc,sBAAd,CAAb;AACA+J,aAAO1H,EAAP,CAAU,YAAV,EAAwB,UAAC2H,KAAD,EAAW;AACjC/J,gBAAQgK,eAAR,GAA0B,IAA1B;AACAC,sBAAcF,KAAd;AACD,OAHD,EAIC3H,EAJD,CAII,YAJJ,EAIkB,UAAC2H,KAAD,EAAW;AAC3B/J,gBAAQgK,eAAR,GAA0B,KAA1B;AACAE,2BAAmBH,KAAnB;AACD,OAPD;;AASAvK,WAAK2C,MAAL,CAAYgI,IAAZ,CAAiB,iBAAjB,EAAoC;AAClC,sBAAc7J;AADoB,OAApC;AAGD;;AAED,aAAS2J,aAAT,CAAuBF,KAAvB,EAA8B;AAC5B,UAAIf,QAAQ9E,GAAGP,MAAH,CAAUoG,MAAMzD,MAAhB,EAAwBuC,KAAxB,CAA8B,MAA9B,CAAZ;AACA,UAAIuB,iBAAiBlG,GAAG8E,KAAH,CAASA,KAAT,EAAgBqB,MAAhB,CAAuB,CAAvB,CAArB;AACA,UAAIC,cAAcpG,GAAG8E,KAAH,CAASA,KAAT,EAAgBuB,QAAhB,CAAyB,CAAzB,CAAlB;AACA,UAAIC,eAAetG,GAAGP,MAAH,CAAUoG,MAAMzD,MAAhB,CAAnB;AACAtG,cAAQyK,iBAAR,GAA4BzB,KAA5B;AACAwB,mBAAa3B,KAAb,CAAmB,MAAnB,EAA2BuB,cAA3B,EACCvB,KADD,CACO,QADP,EACiByB,WADjB,EAECzB,KAFD,CAEO,cAFP,EAEuB,CAFvB;AAGD;;AAED,aAASqB,kBAAT,CAA4BH,KAA5B,EAAmC;AACjC7F,SACGP,MADH,CACUoG,MAAMzD,MADhB,EAEGuC,KAFH,CAES,MAFT,EAEiB7I,QAAQyK,iBAFzB,EAGG5B,KAHH,CAGS,QAHT,EAGmB7I,QAAQyK,iBAH3B,EAIG5B,KAJH,CAIS,cAJT,EAIyB,CAJzB;AAKD;;AAED,aAASM,aAAT,CAAuBJ,QAAvB,EAA+C;AAAA,UAAdE,QAAc,uEAAH,CAAG;;AAC7C,UAAIyB,cAAclI,EAAEzC,IAAF,CAAOP,KAAKmL,YAAZ,EAA0B,EAACzC,OAAOtI,MAAMoJ,KAAN,CAAY0B,WAApB,EAA1B,CAAlB;AACA,UAAIE,oBAAoBC,iBAAiBH,YAAYxC,KAA7B,CAAxB;AACA,UAAI4C,qBAAqBJ,YAAYK,MAAZ,KAAuB,QAAvB,IACtBL,YAAYK,MAAZ,KAAuB,MAAvB,IAAiC,CAACC,WAAWC,IAAX,CAAgBC,UADrD;;AAGA,UAAInC,YAAYE,QAAhB,EACEF,WAAWE,WAAW,CAAtB;;AAEF,UAAIkC,QAAQL,qBAAqB/B,QAArB,GAAgCE,QAA5C;AACA,UAAImC,MAAMN,qBAAqB7B,QAArB,GAAgCF,QAA1C;;AAEA,aAAO7E,GAAGmH,eAAH,CAAmBT,iBAAnB,EAAsCxG,MAAtC,CAA6C,CAAC+G,KAAD,EAAQC,GAAR,CAA7C,CAAP;AACD;;AAED,aAAShC,eAAT,CAAyBL,QAAzB,EAAmC;AACjC,UAAInJ,MAAMoJ,KAAN,CAAY/H,UAAZ,KAA2B,QAA/B,EAAyC;AACvCC,uBAAegD,GAAGoH,WAAH,GACdlH,MADc,CACP,CAAC,CAAD,EAAI2E,QAAJ,CADO,EAEdxE,KAFc,CAER,CAAC,CAAD,EAAI,CAAJ,CAFQ,CAAf;AAGD,OAJD,MAIO,IAAI3E,MAAMoJ,KAAN,CAAY/H,UAAZ,KAA2B,MAA/B,EAAuC;AAC5CC,uBAAegD,GAAGqH,QAAH,GAAcC,QAAd,CAAuB5L,MAAMoJ,KAAN,CAAYwC,QAAnC,EACdpH,MADc,CACP,CAAC,CAAD,EAAI2E,QAAJ,CADO,EAEdxE,KAFc,CAER,CAAC,CAAD,EAAI,CAAJ,CAFQ,CAAf;AAGD;AACF;;AAED,aAASiF,QAAT,CAAkBnD,CAAlB,EAAqB;AACnB,UAAIoF,UAAJ;AACA;AACA,UAAIC,KAAKrL,OAAOgG,EAAEoF,CAAT,CAAT;;AAEA,UAAIC,KAAK3K,YAAU,CAAf,GAAmB,CAAvB,EAA0B;AACxB0K,YAAI/K,aAAaG,eAAa,CAA9B;AACD,OAFD,MAEO;AACL4K,YAAI/K,aAAagL,EAAb,GAAkB3K,YAAU,CAAhC;AACD;;AAED,aAAO0K,CAAP;AACD;;AAED;AACA,aAAShC,YAAT,CAAsBpD,CAAtB,EAAyB;AACvB,UAAIsF,UAAJ;AACA,UAAID,KAAKrL,OAAOgG,EAAEoF,CAAT,CAAT;;AAEA,UAAIC,KAAK3K,YAAU,CAAnB,EAAsB;AACpB;AACA;AACA,YAAI6K,eAAgBF,KAAK7K,eAAa,CAAnB,GAAwBE,YAAU,CAArD;AACA4K,YAAIC,eAAe,CAAf,GAAmBA,YAAnB,GAAkC,CAAtC;AACD,OALD,MAKO,IAAItL,aAAaoL,EAAb,GAAkB3K,YAAU,CAAhC,EAAmC;AACxC;AACA4K,YAAI5K,YAAU,CAAV,IAAeT,aAAaoL,EAAb,GAAkB7K,eAAa,CAA9C,CAAJ;AACD,OAHM,MAGA;AACL8K,YAAI5K,SAAJ;AACD;;AAED;AACA4K,UAAIhE,KAAKtE,GAAL,CAASsI,CAAT,EAAYE,aAAZ,CAAJ;;AAEA,aAAOF,CAAP;AACD;;AAED,aAASjC,QAAT,CAAkBrD,CAAlB,EAAqB;AACnB,aAAOjG,OAAOiG,EAAEyF,CAAT,IAActL,QAAd,GAAyBQ,UAAzB,GAAsCJ,eAAa,CAA1D;AACD;;AAED,aAAS+I,aAAT,CAAuBtD,CAAvB,EAA0B;AACxB,UAAI0F,KAAK3L,OAAOiG,EAAEyF,CAAT,CAAT;AACA,UAAIA,IAAIC,KAAKvL,QAAL,GAAgBQ,UAAhB,GAA6BJ,eAAa,CAAlD;AACA,UAAIoL,IAAIhL,UAAR;;AAEA;AACA,UAAI8K,IAAItL,QAAR,EAAkB;AAChBwL,YAAID,KAAKnL,eAAa,CAAtB;AACD,OAFD,MAEO,IAAImL,KAAKtL,WAAT,EAAsB;AAC3BuL,YAAIvL,cAAcqL,CAAlB;AACD,OAFM,MAEA,IAAIA,IAAI9K,UAAJ,GAAiBP,WAArB,EAAkC;AACvCuL,YAAIvL,cAAcqL,CAAlB;AACD;;AAED;AACAE,UAAIrE,KAAKL,GAAL,CAAS0E,CAAT,EAAYzL,WAAZ,CAAJ;AACA;AACAyL,UAAIrE,KAAKtE,GAAL,CAAS2I,CAAT,EAAYH,aAAZ,CAAJ;;AAEA,aAAOG,CAAP;AACD;;AAED,aAASpC,YAAT,CAAsBvD,CAAtB,EAAyB;AACvB,UAAIzG,MAAMoJ,KAAN,CAAYE,IAAZ,KAAqB,SAAzB,EAAoC;AAClC,eAAOtJ,MAAMoJ,KAAN,CAAYiD,SAAnB;AACD,OAFD,MAEO,IAAIrM,MAAMoJ,KAAN,CAAYE,IAAZ,KAAqB,UAAzB,EAAqC;AAC1C,eAAOjI,WAAWoF,EAAE6B,KAAb,CAAP;AACD,OAFM,MAEA,IAAItI,MAAMoJ,KAAN,CAAYE,IAAZ,KAAqB,UAAzB,EAAqC;AAC1C,eAAO1J,KAAK0M,cAAL,CAAoBC,cAApB,CAAmC9F,EAAE+F,MAArC,CAAP;AACD;AACF;;AAED,aAASvC,cAAT,CAAwBxD,CAAxB,EAA2B;AACzB,UAAIzG,MAAMyM,aAAN,KAAwB,UAAxB,IAAsChG,EAAE6B,KAAF,IAAW,IAArD,EAA4D;AAC1D,eAAO,CAAP;AACD;AACD,UAAItI,MAAMoJ,KAAN,CAAYE,IAAZ,KAAqB,SAAzB,EAAoC;AAClC,eAAOhI,aAAamF,EAAE6B,KAAf,CAAP;AACD,OAFD,MAEO;AACL,eAAO,CAAP;AACD;AACF;;AAED,aAASoE,kBAAT,CAA4BjG,CAA5B,EAA+B;AAC7B,UAAIzG,MAAMoJ,KAAN,CAAYE,IAAZ,KAAqB,UAAzB,EAAqC;AACnC,eAAO,GAAP;AACD;AACD,aAAO,GAAP;AACD;;AAED;AACA;AACA;;AAEA;AACAqD,cAAUnK,EAAV,CAAa,aAAb,EAA4B,iBAAS;AACnCoK,0BAAoBzC,MAAM0C,GAA1B;AACD,KAFD,EAEGpN,KAFH;;AAIAkN,cAAUnK,EAAV,CAAa,mBAAb,EAAkC,YAAM;AACtCsK;AACD,KAFD,EAEGrN,KAFH;;AAIA,aAASsN,WAAT,CAAqB5C,KAArB,EAA4B;AAC1BxI,gBAAUC,MAAV,GAAmB,IAAnB;AACAD,gBAAUE,EAAV,GAAesI,MAAM6C,OAArB;;AAEAzL,uBAAiB,0BAAW;AAC1B0L;AACD,OAFD;;AAIAC,QAAEC,QAAF,EAAYC,GAAZ,CAAgB,SAAhB,EAA2B7L,cAA3B;AACD;;AAED,aAAS0L,SAAT,GAAqB;AACnBC,QAAEC,QAAF,EAAYE,MAAZ,CAAmB,SAAnB,EAA8B9L,cAA9B;AACAA,uBAAiB,IAAjB;AACAI,gBAAUC,MAAV,GAAmB,KAAnB;;AAEA,UAAI0L,iBAAiBvF,KAAKwF,GAAL,CAAS5L,UAAUG,EAAV,GAAeH,UAAUE,EAAlC,CAArB;AACA,UAAIF,UAAUG,EAAV,IAAgB,CAAhB,IAAqBwL,iBAAiBE,mBAA1C,EAA+D;AAC7D,YAAIC,WAAWhN,OAAO0K,MAAP,CAAcpD,KAAKL,GAAL,CAAS/F,UAAUE,EAAnB,EAAuBF,UAAUG,EAAjC,IAAuChB,UAAvC,GAAoDU,YAAU,CAA5E,CAAf;AACA,YAAIkM,SAASjN,OAAO0K,MAAP,CAAcpD,KAAKtE,GAAL,CAAS9B,UAAUE,EAAnB,EAAuBF,UAAUG,EAAjC,IAAuChB,UAAvC,GAAoDU,YAAU,CAA5E,CAAb;;AAEA5B,aAAK+N,OAAL,CAAaC,OAAb,CAAqB;AACnBnJ,gBAAMoJ,OAAOC,GAAP,CAAWL,QAAX,CADa;AAEnB/I,cAAImJ,OAAOC,GAAP,CAAWJ,MAAX;AAFe,SAArB;AAID;;AAEDK;AACD;;AAED,aAASC,YAAT,GAAwB;AACtBrB,gBAAUpC,IAAV,CAAe,mBAAf;AACAuC;AACD;;AAED,aAASmB,WAAT,CAAqB9D,KAArB,EAA4B;AAC1B,UAAI,CAAClK,OAAL,EAAc;AAAE;AAAS;;AAEzB,UAAI0B,UAAUC,MAAd,EAAsB;AACpB;AACAkL;AACA1M,gBAAQ8N,OAAR;;AAEAvM,kBAAUG,EAAV,GAAeqM,eAAehE,MAAM6C,OAArB,CAAf;AACAoB,sBAAczM,UAAUE,EAAxB,EAA4BF,UAAUG,EAAtC;AACD,OAPD,MAOO;AACLuM,2BAAmBlE,KAAnB;AACAmE,sBAAcnE,MAAM6C,OAApB;AACA5M,gBAAQ6C,IAAR,CAAakH,KAAb,EAHK,CAGgB;AACtB;AACF;;AAED,aAASkE,kBAAT,CAA4BlE,KAA5B,EAAmC;AACjC,UAAI0B,IAAIpL,OAAO0K,MAAP,CAAchB,MAAM6C,OAAN,GAAgBlM,UAAhB,GAA6BU,YAAU,CAArD,EAAwD+M,OAAxD,EAAR;AACA,UAAIrC,IAAI1L,OAAO2J,MAAMqE,OAAb,CAAR;AACA,UAAI3B,MAAM;AACR4B,eAAOtE,MAAMsE,KADL;AAERC,eAAOvE,MAAMuE,KAFL;AAGR7C,WAAGA,CAHK,EAGFhK,IAAIgK,CAHF;AAIRK,WAAGA,CAJK,EAIFyC,IAAIzC,CAJF;AAKR0C,mBAAW;AALH,OAAV;;AAQA;AACA/B,UAAI+B,SAAJ,GAAgB7G,KAAKtE,GAAL,CAAS0G,MAAMqE,OAAN,GAAgBjO,MAAzB,EAAiC,KAAjC,CAAhB;;AAEA;AACAoM,gBAAUpC,IAAV,CAAe,aAAf,EAA8B,EAACsC,KAAKA,GAAN,EAAW7M,OAAOA,KAAlB,EAA9B;AACD;;AAED,aAASmO,cAAT,CAAwBrM,EAAxB,EAA4B;AAC1BA,WAAKiG,KAAKtE,GAAL,CAAS3B,EAAT,EAAahB,UAAb,CAAL;AACAgB,WAAKiG,KAAKL,GAAL,CAAS5F,EAAT,EAAapB,aAAaI,UAA1B,CAAL;AACA,aAAOgB,EAAP;AACD;;AAED,aAASsM,aAAT,CAAuBS,KAAvB,EAA8BC,KAA9B,EAAqC;AACnC,UAAI7O,OAAJ,EAAa;AACXA,gBAAQqD,SAAR,CAAkB,2BAAlB,EAA+CyC,MAA/C;AACA,YAAIgJ,aAAahH,KAAKL,GAAL,CAASmH,KAAT,EAAgBC,KAAhB,CAAjB;AACA,YAAIE,iBAAiBjH,KAAKwF,GAAL,CAASsB,QAAQC,KAAjB,CAArB;;AAEA,YAAIE,iBAAiBxB,mBAArB,EAA0C;AACxCvN,kBAAQ4F,MAAR,CAAe,MAAf,EACC1B,IADD,CACM,OADN,EACe,0BADf,EAECA,IAFD,CAEM,GAFN,EAEW4K,UAFX,EAGC5K,IAHD,CAGM,OAHN,EAGe6K,cAHf,EAIC7K,IAJD,CAIM,GAJN,EAIWvD,QAJX,EAKCuD,IALD,CAKM,QALN,EAKgBxD,WALhB;AAMD;AACF;AACF;;AAED,aAASoN,cAAT,GAA0B;AACxBpM,gBAAUE,EAAV,GAAe,CAAC,CAAhB;AACAF,gBAAUG,EAAV,GAAe,CAAC,CAAhB;;AAEA,UAAI7B,OAAJ,EAAa;AACXA,gBAAQqD,SAAR,CAAkB,2BAAlB,EAA+CyC,MAA/C;AACD;AACF;;AAED,aAASuI,aAAT,CAAuBW,QAAvB,EAAiC;AAC/B,UAAIhP,OAAJ,EAAa;AACXA,gBAAQqD,SAAR,CAAkB,2BAAlB,EAA+CyC,MAA/C;;AAEA,YAAIH,OAAOqJ,QAAX;AACArJ,eAAOmC,KAAKtE,GAAL,CAASmC,IAAT,EAAe9E,UAAf,CAAP;AACA8E,eAAOmC,KAAKL,GAAL,CAAS9B,IAAT,EAAelF,aAAaI,UAA5B,CAAP;;AAEAb,gBAAQ4F,MAAR,CAAe,GAAf,EACC1B,IADD,CACM,OADN,EACe,0BADf,EAECA,IAFD,CAEM,WAFN,EAEmB,eAAeyB,IAAf,GAAsB,KAFzC,EAGCC,MAHD,CAGQ,MAHR,EAIC1B,IAJD,CAIM,IAJN,EAIY,CAJZ,EAKCA,IALD,CAKM,IALN,EAKYvD,QALZ,EAMCuD,IAND,CAMM,IANN,EAMY,CANZ,EAOCA,IAPD,CAOM,IAPN,EAOYtD,WAPZ,EAQCsD,IARD,CAQM,cARN,EAQsB,CARtB;AASD;AACF;;AAED;AACA,aAASyI,mBAAT,CAA6BC,GAA7B,EAAkC;AAChC,UAAI5M,WAAWL,KAAKsF,SAAL,CAAegK,YAAf,KAAgC,CAA/C,EAAkD;AAChD,YAAItJ,OAAOnF,OAAOoM,IAAIhB,CAAX,IAAgB/K,UAA3B;AACAwN,sBAAc1I,IAAd;AACD;AACF;;AAED,aAASkH,cAAT,GAA0B;AACxB,UAAI7M,OAAJ,EAAa;AACXA,gBAAQqD,SAAR,CAAkB,2BAAlB,EAA+CyC,MAA/C;AACD;AACF;;AAED,aAAStD,MAAT,GAAkB;AAChB5C,aAAOD,KAAKC,IAAZ;AACAG,cAAQJ,KAAKI,KAAb;AACAD,kBAAYH,KAAK+E,KAAjB;AACA7E,kBAAYF,KAAKE,SAAjB;;AAEA,UAAI,CAACD,IAAD,IAAS,CAACC,SAAV,IAAuB,CAAC4C,kBAA5B,EAAgD;AAC9C;AACD;;AAED;AACA,UAAIE,EAAE+D,OAAF,CAAU7G,UAAU6I,KAApB,CAAJ,EAAgC;AAC9BF;AACA;AACD;;AAEDS;AACAzJ,YAAMqB,UAAN,GAAmBA,UAAnB;AACArB,YAAMsB,WAAN,GAAoBA,WAApB;AACAtB,YAAMkB,WAAN,GAAoBA,WAApB;AACAlB,YAAMiB,UAAN,GAAmBA,UAAnB;AACAjB,YAAMmB,QAAN,GAAiBA,QAAjB;AACD;;AAED;AACAV,aAASsC,EAAT,CAAY,WAAZ,EAAyBuK,WAAzB;AACA7M,aAASsC,EAAT,CAAY,WAAZ,EAAyByL,WAAzB;AACA/N,aAASsC,EAAT,CAAY,YAAZ,EAA0BwL,YAA1B;AACD;;qBAjmBuBxO,I;;AAmmBxB,WAASuF,iBAAT,CAA2BH,KAA3B,EAAkC8C,GAAlC,EAAuCjE,GAAvC,EAA4C;AAC1C,QAAIiE,OAAOjE,GAAP,IAAcmB,KAAlB,EAAyB;AACvB,UAAID,QAAQlB,MAAMiE,GAAlB;AACA,UAAIyH,aAAcxK,QAAMC,KAAP,GAAgB,IAAjC;AACA,UAAIwK,SAAS,QAAb;AACA,UAAIC,UAAU,WAAd;;AAEA,UAAIF,cAAc,EAAlB,EAAsB;AACpB,eAAO,UAAP;AACD;AACD,UAAIA,cAAc,IAAd,IAAsBxK,SAASyK,MAAnC,EAA2C;AACzC,eAAO,OAAP;AACD;AACD,UAAID,cAAc,KAAlB,EAAyB;AACvB,eAAO,aAAP;AACD;AACD,UAAIA,cAAc,OAAd,IAAyBxK,SAAS0K,OAAtC,EAA+C;AAC7C,eAAO,OAAP;AACD;AACD,aAAO,OAAP;AACD;;AAED,WAAO,OAAP;AACD;;;AA/oBMzM,O;;AACAsK,O;;AACAW,Y;;AACAtF,S;;AACCoE,e,gBAAAA,S;AAAWvB,gB,gBAAAA,U;;AACXkE,c,sBAAAA,Q;AAAUC,uB,sBAAAA,iB;AAAmBC,qB,sBAAAA,e;;AAC9BlL,Q;;AACK2G,sB;;AACJ5K,0B,YAAAA,oB;;;AAEJ4L,mB,GAAgB,C;AAChBrD,oB,GAAiB,C;AACjBC,oB,GAAiB,C;AACjBC,gB,GAAa,C;AACbxG,8B,GAA2B,G;AAC3BuC,4B,GAAyB,G;AACzB4K,4B,GAAyB,E;AACzBhK,yB,GAAsB,E;AACtB+B,yB,GAAsB,C;AACtBgG,yB,GAAsB,C","file":"rendering.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport kbn from 'app/core/utils/kbn';\nimport {appEvents, contextSrv} from 'app/core/core';\nimport {tickStep, getScaledDecimals, getFlotTickSize} from 'app/core/utils/ticks';\nimport d3 from 'd3';\nimport * as d3ScaleChromatic from './libs/d3-scale-chromatic/index';\nimport {StatusHeatmapTooltip} from './tooltip';\n\nlet MIN_CARD_SIZE = 5,\n    CARD_H_SPACING = 2,\n    CARD_V_SPACING = 2,\n    CARD_ROUND = 0,\n    DATA_RANGE_WIDING_FACTOR = 1.2,\n    DEFAULT_X_TICK_SIZE_PX = 100,\n    DEFAULT_Y_TICK_SIZE_PX = 50,\n    X_AXIS_TICK_PADDING = 10,\n    Y_AXIS_TICK_PADDING = 5,\n    MIN_SELECTION_WIDTH = 2;\n\nexport default function link(scope, elem, attrs, ctrl) {\n  let data, cardsData, timeRange, panel, heatmap;\n\n  // $heatmap is JQuery object, but heatmap is D3\n  let $heatmap = elem.find('.status-heatmap-panel');\n  let tooltip = new StatusHeatmapTooltip($heatmap, scope);\n\n  let width, height,\n      yScale, xScale,\n      chartWidth, chartHeight,\n      chartTop, chartBottom,\n      yAxisWidth, xAxisHeight,\n      cardVSpacing, cardHSpacing, cardRound,\n      cardWidth, cardHeight,\n      colorScale, opacityScale,\n      mouseUpHandler,\n      xGridSize, yGridSize;\n\n  let yOffset = 0;\n\n  let selection = {\n    active: false,\n    x1: -1,\n    x2: -1\n  };\n\n  let padding = {left: 0, right: 0, top: 0, bottom: 0},\n      margin = {left: 25, right: 15, top: 10, bottom: 20},\n      dataRangeWidingFactor = DATA_RANGE_WIDING_FACTOR;\n\n  ctrl.events.on('render', () => {\n    render();\n  });\n\n  function setElementHeight() {\n    try {\n      var height = ctrl.height || panel.height || ctrl.row.height;\n      if (_.isString(height)) {\n        height = parseInt(height.replace('px', ''), 10);\n      }\n\n      height -= panel.legend.show ? 32 : 10; // bottom padding and space for legend. Change margin in .status-heatmap-color-legend !\n\n      $heatmap.css('height', height + 'px');\n\n      return true;\n    } catch (e) { // IE throws errors sometimes\n      return false;\n    }\n  }\n\n  function getYAxisWidth(elem) {\n    let axis_text = elem.selectAll(\".axis-y text\").nodes();\n    let max_text_width = _.max(_.map(axis_text, text => {\n      // Use SVG getBBox method\n      return text.getBBox().width;\n    }));\n\n    return max_text_width;\n  }\n\n  function getXAxisHeight(elem) {\n    let axis_line = elem.select(\".axis-x line\");\n    if (!axis_line.empty()) {\n      let axis_line_position = parseFloat(elem.select(\".axis-x line\").attr(\"y2\"));\n      let canvas_width = parseFloat(elem.attr(\"height\"));\n      return canvas_width - axis_line_position;\n    } else {\n      // Default height\n      return 30;\n    }\n  }\n\n  function addXAxis() {\n    // Scale timestamps to cards centers\n    scope.xScale = xScale = d3.scaleTime()\n      .domain([timeRange.from, timeRange.to])\n      .range([xGridSize/2, chartWidth-xGridSize/2]);\n\n    let ticks = chartWidth / DEFAULT_X_TICK_SIZE_PX;\n    let grafanaTimeFormatter = grafanaTimeFormat(ticks, timeRange.from, timeRange.to);\n    let timeFormat;\n    let dashboardTimeZone = ctrl.dashboard.getTimezone();\n    if (dashboardTimeZone === 'utc') {\n      timeFormat = d3.utcFormat(grafanaTimeFormatter);\n    } else {\n      timeFormat = d3.timeFormat(grafanaTimeFormatter);\n    }\n\n    let xAxis = d3.axisBottom(xScale)\n      .ticks(ticks)\n      .tickFormat(timeFormat)\n      .tickPadding(X_AXIS_TICK_PADDING)\n      .tickSize(chartHeight);\n\n    let posY = chartTop;\n    let posX = yAxisWidth;\n\n    heatmap.append(\"g\")\n      .attr(\"class\", \"axis axis-x\")\n      .attr(\"transform\", \"translate(\" + posX + \",\" + posY + \")\")\n      .call(xAxis);\n\n    // Remove horizontal line in the top of axis labels (called domain in d3)\n    heatmap.select(\".axis-x\").select(\".domain\").remove();\n  }\n\n  // divide chart height by ticks for cards drawing\n  function getYScale(ticks) {\n    let range = [];\n    let step = chartHeight / ticks.length;\n    // svg has y=0 on the top, so top card should have a minimal value in range\n    range.push(step);\n    for (let i = 1; i < ticks.length; i++) {\n      range.push(step * (i+1));\n    }\n    return d3.scaleOrdinal()\n      .domain(ticks)\n      .range(range);\n  }\n\n  // divide chart height by ticks with offset for ticks drawing\n  function getYAxisScale(ticks) {\n    let range = [];\n    let step = chartHeight / ticks.length;\n    // svg has y=0 on the top, so top tick should have a minimal value in range\n    range.push(yOffset);\n    for (let i = 1; i < ticks.length; i++) {\n      range.push(step * i + yOffset);\n    }\n    return d3.scaleOrdinal()\n      .domain(ticks)\n      .range(range);\n  }\n\n  function addYAxis() {\n    let ticks = _.uniq(_.map(data, d => d.target));\n\n    // Set default Y min and max if no data\n    if (_.isEmpty(data)) {\n      ticks = [''];\n    }\n\n    if (panel.yAxisSort == 'a → z') {\n      ticks.sort((a, b) => a.localeCompare(b, 'en', {ignorePunctuation: false, numeric: true}));\n    } else if (panel.yAxisSort == 'z → a') {\n      ticks.sort((b, a) => a.localeCompare(b, 'en', {ignorePunctuation: false, numeric: true}));\n    }\n\n    let yAxisScale = getYAxisScale(ticks);\n    scope.yScale = yScale = getYScale(ticks);\n\n    let yAxis = d3.axisLeft(yAxisScale)\n      .tickValues(ticks)\n      .tickSizeInner(0 - width)\n      .tickPadding(Y_AXIS_TICK_PADDING);\n\n    heatmap.append(\"g\")\n      .attr(\"class\", \"axis axis-y\")\n      .call(yAxis);\n\n    // Calculate Y axis width first, then move axis into visible area\n    let posY = margin.top;\n    let posX = getYAxisWidth(heatmap) + Y_AXIS_TICK_PADDING;\n    heatmap.select(\".axis-y\").attr(\"transform\", \"translate(\" + posX + \",\" + posY + \")\");\n\n    // Remove vertical line in the right of axis labels (called domain in d3)\n    heatmap.select(\".axis-y\").select(\".domain\").remove();\n    heatmap.select(\".axis-y\").selectAll(\".tick line\").remove();\n  }\n\n  // Wide Y values range and adjust to bucket size\n  function wideYAxisRange(min, max, tickInterval) {\n    let y_widing = (max * (dataRangeWidingFactor - 1) - min * (dataRangeWidingFactor - 1)) / 2;\n    let y_min, y_max;\n\n    if (tickInterval === 0) {\n      y_max = max * dataRangeWidingFactor;\n      y_min = min - min * (dataRangeWidingFactor - 1);\n      tickInterval = (y_max - y_min) / 2;\n    } else {\n      y_max = Math.ceil((max + y_widing) / tickInterval) * tickInterval;\n      y_min = Math.floor((min - y_widing) / tickInterval) * tickInterval;\n    }\n\n    // Don't wide axis below 0 if all values are positive\n    if (min >= 0 && y_min < 0) {\n      y_min = 0;\n    }\n\n    return {y_min, y_max};\n  }\n\n  function tickValueFormatter(decimals, scaledDecimals = null) {\n    let format = panel.yAxis.format;\n    return function(value) {\n      return kbn.valueFormats[format](value, decimals, scaledDecimals);\n    };\n  }\n\n  // Create svg element, add axes and\n  // calculate sizes for cards drawing\n  function addHeatmapCanvas() {\n    let heatmap_elem = $heatmap[0];\n\n    width = Math.floor($heatmap.width()) - padding.right;\n    height = Math.floor($heatmap.height()) - padding.bottom;\n\n    if (heatmap) {\n      heatmap.remove();\n    }\n\n    heatmap = d3.select(heatmap_elem)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    chartHeight = height - margin.top - margin.bottom;\n    chartTop = margin.top;\n    chartBottom = chartTop + chartHeight;\n\n    cardHSpacing = panel.cards.cardHSpacing !== null ? panel.cards.cardHSpacing : CARD_H_SPACING;\n    cardVSpacing = panel.cards.cardVSpacing !== null ? panel.cards.cardVSpacing : CARD_V_SPACING;\n    cardRound = panel.cards.cardRound !== null ? panel.cards.cardRound : CARD_ROUND;\n\n    // calculate yOffset for YAxis\n    yGridSize = Math.floor(chartHeight / cardsData.yBucketSize);\n    cardHeight = yGridSize ? yGridSize - cardVSpacing : 0;\n    yOffset = cardHeight / 2;\n\n    addYAxis();\n\n    yAxisWidth = getYAxisWidth(heatmap) + Y_AXIS_TICK_PADDING;\n    chartWidth = width - yAxisWidth - margin.right;\n\n    // we need to fill chartWidth with xBucketSize cards.\n    xGridSize = chartWidth / (cardsData.xBucketSize+1);\n    cardWidth = xGridSize - cardHSpacing;\n\n    addXAxis();\n    xAxisHeight = getXAxisHeight(heatmap);\n\n    if (!panel.yAxis.show) {\n      heatmap.select(\".axis-y\").selectAll(\"line\").style(\"opacity\", 0);\n    }\n\n    if (!panel.xAxis.show) {\n      heatmap.select(\".axis-x\").selectAll(\"line\").style(\"opacity\", 0);\n    }\n  }\n\n  function addHeatmap() {\n    addHeatmapCanvas();\n\n    let maxValue = panel.color.max || cardsData.maxValue;\n    let minValue = panel.color.min || cardsData.minValue;\n\n    if (panel.color.mode !== 'discrete') {\n      colorScale = getColorScale(maxValue, minValue);\n    }\n    setOpacityScale(maxValue);\n\n    let cards = heatmap.selectAll(\".status-heatmap-card\").data(cardsData.cards);\n    cards.append(\"title\");\n    cards = cards.enter().append(\"rect\")\n    .attr(\"cardId\", c => c.id)\n    .attr(\"x\", getCardX)\n    .attr(\"width\", getCardWidth)\n    .attr(\"y\", getCardY)\n    .attr(\"height\", getCardHeight)\n    .attr(\"rx\", cardRound)\n    .attr(\"ry\", cardRound)\n    .attr(\"class\", \"bordered status-heatmap-card\")\n    .style(\"fill\", getCardColor)\n    .style(\"stroke\", getCardColor)\n    .style(\"stroke-width\", 0)\n    //.style(\"stroke-width\", getCardStrokeWidth)\n    //.style(\"stroke-dasharray\", \"3,3\")\n    .style(\"opacity\", getCardOpacity);\n\n    let $cards = $heatmap.find(\".status-heatmap-card\");\n    $cards.on(\"mouseenter\", (event) => {\n      tooltip.mouseOverBucket = true;\n      highlightCard(event);\n    })\n    .on(\"mouseleave\", (event) => {\n      tooltip.mouseOverBucket = false;\n      resetCardHighLight(event);\n    });\n\n    ctrl.events.emit('render-complete', {\n      \"chartWidth\": chartWidth\n    });\n  }\n\n  function highlightCard(event) {\n    let color = d3.select(event.target).style(\"fill\");\n    let highlightColor = d3.color(color).darker(2);\n    let strokeColor = d3.color(color).brighter(4);\n    let current_card = d3.select(event.target);\n    tooltip.originalFillColor = color;\n    current_card.style(\"fill\", highlightColor)\n    .style(\"stroke\", strokeColor)\n    .style(\"stroke-width\", 1);\n  }\n\n  function resetCardHighLight(event) {\n    d3\n      .select(event.target)\n      .style(\"fill\", tooltip.originalFillColor)\n      .style(\"stroke\", tooltip.originalFillColor)\n      .style(\"stroke-width\", 0);\n  }\n\n  function getColorScale(maxValue, minValue = 0) {\n    let colorScheme = _.find(ctrl.colorSchemes, {value: panel.color.colorScheme});\n    let colorInterpolator = d3ScaleChromatic[colorScheme.value];\n    let colorScaleInverted = colorScheme.invert === 'always' ||\n      (colorScheme.invert === 'dark' && !contextSrv.user.lightTheme);\n\n    if (maxValue == minValue)\n      maxValue = minValue + 1;\n\n    let start = colorScaleInverted ? maxValue : minValue;\n    let end = colorScaleInverted ? minValue : maxValue;\n\n    return d3.scaleSequential(colorInterpolator).domain([start, end]);\n  }\n\n  function setOpacityScale(maxValue) {\n    if (panel.color.colorScale === 'linear') {\n      opacityScale = d3.scaleLinear()\n      .domain([0, maxValue])\n      .range([0, 1]);\n    } else if (panel.color.colorScale === 'sqrt') {\n      opacityScale = d3.scalePow().exponent(panel.color.exponent)\n      .domain([0, maxValue])\n      .range([0, 1]);\n    }\n  }\n\n  function getCardX(d) {\n    let x;\n    // cx is the center of the card. Card should be placed to the left.\n    let cx = xScale(d.x);\n\n    if (cx - cardWidth/2 < 0) {\n      x = yAxisWidth + cardHSpacing/2;\n    } else {\n      x = yAxisWidth + cx - cardWidth/2;\n    }\n\n    return x;\n  }\n\n  // xScale returns card center. Adjust cardWidth in case of overlaping.\n  function getCardWidth(d) {\n    let w;\n    let cx = xScale(d.x);\n\n    if (cx < cardWidth/2) {\n      // Center should not exceed half of card.\n      // Cut card to the left to prevent overlay of y axis.\n      let cutted_width = (cx - cardHSpacing/2) + cardWidth/2;\n      w = cutted_width > 0 ? cutted_width : 0;\n    } else if (chartWidth - cx < cardWidth/2) {\n      // Cut card to the right to prevent overlay of right graph edge.\n      w = cardWidth/2 + (chartWidth - cx - cardHSpacing/2);\n    } else {\n      w = cardWidth;\n    }\n\n    // Card width should be MIN_CARD_SIZE at least\n    w = Math.max(w, MIN_CARD_SIZE);\n\n    return w;\n  }\n\n  function getCardY(d) {\n    return yScale(d.y) + chartTop - cardHeight - cardVSpacing/2;\n  }\n\n  function getCardHeight(d) {\n    let ys = yScale(d.y);\n    let y = ys + chartTop - cardHeight - cardVSpacing/2;\n    let h = cardHeight;\n\n    // Cut card height to prevent overlay\n    if (y < chartTop) {\n      h = ys - cardVSpacing/2;\n    } else if (ys > chartBottom) {\n      h = chartBottom - y;\n    } else if (y + cardHeight > chartBottom) {\n      h = chartBottom - y;\n    }\n\n    // Height can't be more than chart height\n    h = Math.min(h, chartHeight);\n    // Card height should be MIN_CARD_SIZE at least\n    h = Math.max(h, MIN_CARD_SIZE);\n\n    return h;\n  }\n\n  function getCardColor(d) {\n    if (panel.color.mode === 'opacity') {\n      return panel.color.cardColor;\n    } else if (panel.color.mode === 'spectrum') {\n      return colorScale(d.value);\n    } else if (panel.color.mode === 'discrete') {\n      return ctrl.discreteHelper.getBucketColor(d.values);\n    }\n  }\n\n  function getCardOpacity(d) {\n    if (panel.nullPointMode === 'as empty' && d.value == null ) {\n      return 0;\n    }\n    if (panel.color.mode === 'opacity') {\n      return opacityScale(d.value);\n    } else {\n      return 1;\n    }\n  }\n\n  function getCardStrokeWidth(d) {\n    if (panel.color.mode === 'discrete') {\n      return '1';\n    }\n    return '0';\n  }\n\n  /////////////////////////////\n  // Selection and crosshair //\n  /////////////////////////////\n\n  // Shared crosshair and tooltip\n  appEvents.on('graph-hover', event => {\n    drawSharedCrosshair(event.pos);\n  }, scope);\n\n  appEvents.on('graph-hover-clear', () => {\n    clearCrosshair();\n  }, scope);\n\n  function onMouseDown(event) {\n    selection.active = true;\n    selection.x1 = event.offsetX;\n\n    mouseUpHandler = function() {\n      onMouseUp();\n    };\n\n    $(document).one(\"mouseup\", mouseUpHandler);\n  }\n\n  function onMouseUp() {\n    $(document).unbind(\"mouseup\", mouseUpHandler);\n    mouseUpHandler = null;\n    selection.active = false;\n\n    let selectionRange = Math.abs(selection.x2 - selection.x1);\n    if (selection.x2 >= 0 && selectionRange > MIN_SELECTION_WIDTH) {\n      let timeFrom = xScale.invert(Math.min(selection.x1, selection.x2) - yAxisWidth - xGridSize/2);\n      let timeTo = xScale.invert(Math.max(selection.x1, selection.x2) - yAxisWidth - xGridSize/2);\n\n      ctrl.timeSrv.setTime({\n        from: moment.utc(timeFrom),\n        to: moment.utc(timeTo)\n      });\n    }\n\n    clearSelection();\n  }\n\n  function onMouseLeave() {\n    appEvents.emit('graph-hover-clear');\n    clearCrosshair();\n  }\n\n  function onMouseMove(event) {\n    if (!heatmap) { return; }\n\n    if (selection.active) {\n      // Clear crosshair and tooltip\n      clearCrosshair();\n      tooltip.destroy();\n\n      selection.x2 = limitSelection(event.offsetX);\n      drawSelection(selection.x1, selection.x2);\n    } else {\n      emitGraphHoverEvet(event);\n      drawCrosshair(event.offsetX);\n      tooltip.show(event); //, data);\n    }\n  }\n\n  function emitGraphHoverEvet(event) {\n    let x = xScale.invert(event.offsetX - yAxisWidth - xGridSize/2).valueOf();\n    let y = yScale(event.offsetY);\n    let pos = {\n      pageX: event.pageX,\n      pageY: event.pageY,\n      x: x, x1: x,\n      y: y, y1: y,\n      panelRelY: null\n    };\n\n    // Set minimum offset to prevent showing legend from another panel\n    pos.panelRelY = Math.max(event.offsetY / height, 0.001);\n\n    // broadcast to other graph panels that we are hovering\n    appEvents.emit('graph-hover', {pos: pos, panel: panel});\n  }\n\n  function limitSelection(x2) {\n    x2 = Math.max(x2, yAxisWidth);\n    x2 = Math.min(x2, chartWidth + yAxisWidth);\n    return x2;\n  }\n\n  function drawSelection(posX1, posX2) {\n    if (heatmap) {\n      heatmap.selectAll(\".status-heatmap-selection\").remove();\n      let selectionX = Math.min(posX1, posX2);\n      let selectionWidth = Math.abs(posX1 - posX2);\n\n      if (selectionWidth > MIN_SELECTION_WIDTH) {\n        heatmap.append(\"rect\")\n        .attr(\"class\", \"status-heatmap-selection\")\n        .attr(\"x\", selectionX)\n        .attr(\"width\", selectionWidth)\n        .attr(\"y\", chartTop)\n        .attr(\"height\", chartHeight);\n      }\n    }\n  }\n\n  function clearSelection() {\n    selection.x1 = -1;\n    selection.x2 = -1;\n\n    if (heatmap) {\n      heatmap.selectAll(\".status-heatmap-selection\").remove();\n    }\n  }\n\n  function drawCrosshair(position) {\n    if (heatmap) {\n      heatmap.selectAll(\".status-heatmap-crosshair\").remove();\n\n      let posX = position;\n      posX = Math.max(posX, yAxisWidth);\n      posX = Math.min(posX, chartWidth + yAxisWidth);\n\n      heatmap.append(\"g\")\n      .attr(\"class\", \"status-heatmap-crosshair\")\n      .attr(\"transform\", \"translate(\" + posX + \",0)\")\n      .append(\"line\")\n      .attr(\"x1\", 1)\n      .attr(\"y1\", chartTop)\n      .attr(\"x2\", 1)\n      .attr(\"y2\", chartBottom)\n      .attr(\"stroke-width\", 1);\n    }\n  }\n\n  // map time to X\n  function drawSharedCrosshair(pos) {\n    if (heatmap && ctrl.dashboard.graphTooltip !== 0) {\n      let posX = xScale(pos.x) + yAxisWidth;\n      drawCrosshair(posX);\n    }\n  }\n\n  function clearCrosshair() {\n    if (heatmap) {\n      heatmap.selectAll(\".status-heatmap-crosshair\").remove();\n    }\n  }\n\n  function render() {\n    data = ctrl.data;\n    panel = ctrl.panel;\n    timeRange = ctrl.range;\n    cardsData = ctrl.cardsData;\n\n    if (!data || !cardsData || !setElementHeight()) {\n      return;\n    }\n\n    // Draw default axes and return if no data\n    if (_.isEmpty(cardsData.cards)) {\n      addHeatmapCanvas();\n      return;\n    }\n\n    addHeatmap();\n    scope.yAxisWidth = yAxisWidth;\n    scope.xAxisHeight = xAxisHeight;\n    scope.chartHeight = chartHeight;\n    scope.chartWidth = chartWidth;\n    scope.chartTop = chartTop;\n  }\n\n  // Register selection listeners\n  $heatmap.on(\"mousedown\", onMouseDown);\n  $heatmap.on(\"mousemove\", onMouseMove);\n  $heatmap.on(\"mouseleave\", onMouseLeave);\n}\n\nfunction grafanaTimeFormat(ticks, min, max) {\n  if (min && max && ticks) {\n    let range = max - min;\n    let secPerTick = (range/ticks) / 1000;\n    let oneDay = 86400000;\n    let oneYear = 31536000000;\n\n    if (secPerTick <= 45) {\n      return \"%H:%M:%S\";\n    }\n    if (secPerTick <= 7200 || range <= oneDay) {\n      return \"%H:%M\";\n    }\n    if (secPerTick <= 80000) {\n      return \"%m/%d %H:%M\";\n    }\n    if (secPerTick <= 2419200 || range <= oneYear) {\n      return \"%m/%d\";\n    }\n    return \"%Y-%m\";\n  }\n\n  return \"%H:%M\";\n}\n"]}