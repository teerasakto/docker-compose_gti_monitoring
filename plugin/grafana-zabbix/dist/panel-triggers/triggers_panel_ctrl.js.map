{"version":3,"sources":["../../src/panel-triggers/triggers_panel_ctrl.js"],"names":["filterTriggers","triggers","triggerFilter","utils","isRegex","_","filter","trigger","buildRegex","test","description","$","moment","PanelCtrl","triggerPanelOptionsTab","triggerPanelTriggersTab","migratePanelSchema","CURRENT_SCHEMA_VERSION","ZABBIX_DS_ID","DEFAULT_TARGET","group","host","application","tags","DEFAULT_SEVERITY","priority","severity","color","show","DEFAULT_TIME_FORMAT","PANEL_DEFAULTS","schemaVersion","datasources","targets","hostField","hostTechNameField","hostGroups","showTags","statusField","severityField","descriptionField","descriptionAtNewLine","hostsInMaintenance","showTriggers","sortTriggersBy","text","value","showEvents","limit","fontSize","pageSize","highlightBackground","highlightNewEvents","highlightNewerThan","customLastChangeFormat","lastChangeFormat","triggerSeverity","okEventColor","ackEventColor","triggerStatusMap","TriggerPanelCtrl","$scope","$injector","$timeout","datasourceSrv","templateSrv","contextSrv","dashboardSrv","scope","editorTabIndex","defaultTimeFormat","pageIndex","triggerList","currentTriggersPage","panel","defaultsDeep","cloneDeep","available_datasources","map","getZabbixDataSources","length","push","isEmpty","initDatasources","events","on","onInitEditMode","bind","onRefresh","promises","ds","get","then","datasource","Promise","all","getMetricSources","meta","id","addEditorTab","timing","queryStart","Date","getTime","queryEnd","otherPanelInFullscreenMode","error","loading","setTimeQueryStart","getTriggers","setTimeQueryEnd","render","zabbixTriggers","catch","err","cancelled","console","log","message","data","emit","triggerListUnfiltered","formatTrigger","filterTriggersPost","sortTriggers","slice","getCurrentTriggersPage","zabbix","groupFilter","replaceTemplateVars","hostFilter","appFilter","triggersOptions","getAcknowledges","setMaintenanceStatus","filterTriggersPre","addTriggerDataSource","flatten","results","eventids","lastEvent","eventid","each","event","find","acknowledges","formatAcknowledge","ack","timestamp","unix","clock","time","format","user","alias","name","surname","fullName","target","tagsFilter","replace","parseTags","every","tag","maintenance","maintenance_status","some","hosts","orderBy","zabbixTrigger","triggerObj","hostTechName","comments","lastchangeUnix","Number","lastchange","setTriggerLastChange","setTriggerSeverity","markAckEvents","age","fromNow","tagStr","split","trim","tagParts","join","tagFilter","targetTags","newTag","uniqWith","isEqual","newFilter","tagsToString","refresh","showComment","grafana_user","ack_message","userIsEditor","isEditor","isGrafanaAdmin","disableReadOnlyUsersAck","reject","zabbixAPI","acknowledgeEvent","startPos","endPos","Math","min","groupNames","groups","iconClass","isNewTrigger","statusClass","mainColor","secondColor","lightTheme","highlightIntervalMs","parseInterval","durationSec","now","e","elem","attrs","ctrl","pageCount","$watchGroup","renderPanel","switchPage","renderData","getContentHeight","panelHeight","height","el","currentTarget","parseInt","$apply","appendPaginationControls","footerElem","empty","ceil","startPage","max","endPage","paginationList","i","activeClass","pageLinkElem","append","setFontSize","triggerCardElem","css","rootElem","renderingCompleted","unbindDestroy","$on","off","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAupBA,WAASA,cAAT,CAAwBC,QAAxB,EAAkCC,aAAlC,EAAiD;AAC/C,QAAIC,MAAMC,OAAN,CAAcF,aAAd,CAAJ,EAAkC;AAChC,aAAOG,EAAEC,MAAF,CAASL,QAAT,EAAmB,UAASM,OAAT,EAAkB;AAC1C,eAAOJ,MAAMK,UAAN,CAAiBN,aAAjB,EAAgCO,IAAhC,CAAqCF,QAAQG,WAA7C,CAAP;AACD,OAFM,CAAP;AAGD,KAJD,MAIO;AACL,aAAOL,EAAEC,MAAF,CAASL,QAAT,EAAmB,UAASM,OAAT,EAAkB;AAC1C,eAAOA,QAAQG,WAAR,KAAwBR,aAA/B;AACD,OAFM,CAAP;AAGD;AACF;;;AAjqBMG,O;;AACAM,O;;AACAC,Y;;AACKT,W;;AACJU,e,kBAAAA,S;;AACAC,4B,gBAAAA,sB;;AACAC,6B,iBAAAA,uB;;AACAC,wB,eAAAA,kB;AAAoBC,4B,eAAAA,sB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEtBC,kB,GAAe,mC;;gCAERC,c,GAAiB;AAC5BC,eAAO,EAACd,QAAQ,EAAT,EADqB;AAE5Be,cAAM,EAACf,QAAQ,EAAT,EAFsB;AAG5BgB,qBAAa,EAAChB,QAAQ,EAAT,EAHe;AAI5BC,iBAAS,EAACD,QAAQ,EAAT,EAJmB;AAK5BiB,cAAM,EAACjB,QAAQ,EAAT;AALsB,O;;;;kCAQjBkB,gB,GAAmB,CAC9B,EAAEC,UAAU,CAAZ,EAAeC,UAAU,gBAAzB,EAA4CC,OAAO,oBAAnD,EAAyEC,MAAM,IAA/E,EAD8B,EAE9B,EAAEH,UAAU,CAAZ,EAAeC,UAAU,aAAzB,EAA4CC,OAAO,oBAAnD,EAAyEC,MAAM,IAA/E,EAF8B,EAG9B,EAAEH,UAAU,CAAZ,EAAeC,UAAU,SAAzB,EAA4CC,OAAO,mBAAnD,EAAwEC,MAAM,IAA9E,EAH8B,EAI9B,EAAEH,UAAU,CAAZ,EAAeC,UAAU,SAAzB,EAA4CC,OAAO,mBAAnD,EAAwEC,MAAM,IAA9E,EAJ8B,EAK9B,EAAEH,UAAU,CAAZ,EAAeC,UAAU,MAAzB,EAA4CC,OAAO,mBAAnD,EAAwEC,MAAM,IAA9E,EAL8B,EAM9B,EAAEH,UAAU,CAAZ,EAAeC,UAAU,UAAzB,EAA4CC,OAAO,gBAAnD,EAAqEC,MAAM,IAA3E,EAN8B,C;;;;AAS1BC,yB,GAAsB,sB;;gCAEfC,c,GAAiB;AAC5BC,uBAAed,sBADa;AAE5Be,qBAAa,EAFe;AAG5BC,iBAAS,EAHmB;AAI5B;AACAC,mBAAW,IALiB;AAM5BC,2BAAmB,KANS;AAO5BC,oBAAY,KAPgB;AAQ5BC,kBAAU,IARkB;AAS5BC,qBAAa,IATe;AAU5BC,uBAAe,IAVa;AAW5BC,0BAAkB,IAXU;AAY5BC,8BAAsB,KAZM;AAa5B;AACAC,4BAAoB,IAdQ;AAe5BC,sBAAc,cAfc;AAgB5BC,wBAAgB,EAAEC,MAAM,aAAR,EAAuBC,OAAO,YAA9B,EAhBY;AAiB5BC,oBAAY,EAAEF,MAAM,UAAR,EAAoBC,OAAO,GAA3B,EAjBgB;AAkB5BE,eAAO,GAlBqB;AAmB5B;AACAC,kBAAU,MApBkB;AAqB5BC,kBAAU,EArBkB;AAsB5BC,6BAAqB,KAtBO;AAuB5BC,4BAAoB,KAvBQ;AAwB5BC,4BAAoB,IAxBQ;AAyB5BC,gCAAwB,KAzBI;AA0B5BC,0BAAkB,EA1BU;AA2B5B;AACAC,yBAAiBhC,gBA5BW;AA6B5BiC,sBAAc,mBA7Bc;AA8B5BC,uBAAe;AA9Ba,O;;;;AAiCxBC,sB,GAAmB;AACvB,aAAK,IADkB;AAEvB,aAAK;AAFkB,O;;kCAKZC,gB;;;AAEX;AACA,kCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,aAAzC,EAAwDC,WAAxD,EAAqEC,UAArE,EAAiFC,YAAjF,EAA+F;AAAA;;AAAA,0IACvFN,MADuF,EAC/EC,SAD+E;;AAE7F,gBAAKE,aAAL,GAAqBA,aAArB;AACA,gBAAKC,WAAL,GAAmBA,WAAnB;AACA,gBAAKC,UAAL,GAAkBA,UAAlB;AACA,gBAAKC,YAAL,GAAoBA,YAApB;AACA,gBAAKC,KAAL,GAAaP,MAAb;AACA,gBAAKE,QAAL,GAAgBA,QAAhB;;AAEA,gBAAKM,cAAL,GAAsB,CAAtB;AACA,gBAAKV,gBAAL,GAAwBA,gBAAxB;AACA,gBAAKW,iBAAL,GAAyBzC,mBAAzB;AACA,gBAAK0C,SAAL,GAAiB,CAAjB;AACA,gBAAKC,WAAL,GAAmB,EAAnB;AACA,gBAAKC,mBAAL,GAA2B,EAA3B;AACA,gBAAKzC,WAAL,GAAmB,EAAnB;;AAEA,gBAAK0C,KAAL,GAAa1D,mBAAmB,MAAK0D,KAAxB,CAAb;AACArE,YAAEsE,YAAF,CAAe,MAAKD,KAApB,EAA2BrE,EAAEuE,SAAF,CAAY9C,cAAZ,CAA3B;;AAEA,gBAAK+C,qBAAL,GAA6BxE,EAAEyE,GAAF,CAAM,MAAKC,oBAAL,EAAN,EAAmC,MAAnC,CAA7B;AACA,cAAI,MAAKL,KAAL,CAAW1C,WAAX,CAAuBgD,MAAvB,KAAkC,CAAtC,EAAyC;AACvC,kBAAKN,KAAL,CAAW1C,WAAX,CAAuBiD,IAAvB,CAA4B,MAAKJ,qBAAL,CAA2B,CAA3B,CAA5B;AACD;AACD,cAAIxE,EAAE6E,OAAF,CAAU,MAAKR,KAAL,CAAWzC,OAArB,CAAJ,EAAmC;AACjC,kBAAKyC,KAAL,CAAWzC,OAAX,CAAmB,MAAKyC,KAAL,CAAW1C,WAAX,CAAuB,CAAvB,CAAnB,IAAgDb,cAAhD;AACD;;AAED,gBAAKgE,eAAL;AACA,gBAAKC,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,OAAjC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,SAAf,EAA0B,MAAKG,SAAL,CAAeD,IAAf,OAA1B;AA9B6F;AA+B9F;;;;4CAEiB;AAAA;;AAChB,gBAAIE,WAAWpF,EAAEyE,GAAF,CAAM,KAAKJ,KAAL,CAAW1C,WAAjB,EAA8B,UAAC0D,EAAD,EAAQ;AACnD;AACA,qBAAO,OAAK1B,aAAL,CAAmB2B,GAAnB,CAAuBD,EAAvB,EACNE,IADM,CACD,sBAAc;AAClB,uBAAK5D,WAAL,CAAiB0D,EAAjB,IAAuBG,UAAvB;AACA,uBAAOA,UAAP;AACD,eAJM,CAAP;AAKD,aAPc,CAAf;AAQA,mBAAOC,QAAQC,GAAR,CAAYN,QAAZ,CAAP;AACD;;;iDAEsB;AACrB,mBAAOpF,EAAEC,MAAF,CAAS,KAAK0D,aAAL,CAAmBgC,gBAAnB,EAAT,EAAgD,sBAAc;AACnE,qBAAOH,WAAWI,IAAX,CAAgBC,EAAhB,KAAuBhF,YAAvB,IAAuC2E,WAAW/C,KAAzD;AACD,aAFM,CAAP;AAGD;;;2CAEgB;AACf,iBAAKqD,YAAL,CAAkB,UAAlB,EAA8BpF,uBAA9B,EAAuD,CAAvD;AACA,iBAAKoF,YAAL,CAAkB,SAAlB,EAA6BrF,sBAA7B,EAAqD,CAArD;AACD;;;8CAEmB;AAClB,iBAAKsF,MAAL,CAAYC,UAAZ,GAAyB,IAAIC,IAAJ,GAAWC,OAAX,EAAzB;AACD;;;4CAEiB;AAChB,iBAAKH,MAAL,CAAYI,QAAZ,GAAuB,IAAIF,IAAJ,GAAWC,OAAX,EAAvB;AACD;;;sCAEW;AAAA;;AACV;AACA,gBAAI,KAAKE,0BAAL,EAAJ,EAAuC;AAAE;AAAS;;AAElD;AACA,mBAAO,KAAKC,KAAZ;AACA,iBAAKC,OAAL,GAAe,IAAf;AACA,iBAAKC,iBAAL;AACA,iBAAKrC,SAAL,GAAiB,CAAjB;;AAEA,mBAAO,KAAKsC,WAAL,GACNjB,IADM,CACD,0BAAkB;AACtB;AACA,qBAAKe,OAAL,GAAe,KAAf;AACA,qBAAKG,eAAL;;AAEA,qBAAKC,MAAL,CAAYC,cAAZ;AACD,aAPM,EAQNC,KARM,CAQA,eAAO;AACZ;AACA,kBAAIC,IAAIC,SAAR,EAAmB;AACjBC,wBAAQC,GAAR,CAAY,yBAAZ,EAAuCH,GAAvC;AACA;AACD;;AAED,qBAAKP,OAAL,GAAe,KAAf;AACA,qBAAKD,KAAL,GAAaQ,IAAII,OAAJ,IAAe,eAA5B;;AAEA,kBAAIJ,IAAIK,IAAR,EAAc;AACZ,oBAAIL,IAAIK,IAAJ,CAASD,OAAb,EAAsB;AACpB,yBAAKZ,KAAL,GAAaQ,IAAIK,IAAJ,CAASD,OAAtB;AACD;AACD,oBAAIJ,IAAIK,IAAJ,CAASb,KAAb,EAAoB;AAClB,yBAAKA,KAAL,GAAaQ,IAAIK,IAAJ,CAASb,KAAtB;AACD;AACF;;AAED,qBAAKtB,MAAL,CAAYoC,IAAZ,CAAiB,YAAjB,EAA+BN,GAA/B;AACAE,sBAAQC,GAAR,CAAY,mBAAZ,EAAiCH,GAAjC;AACD,aA7BM,CAAP;AA8BD;;;iCAEMF,c,EAAgB;AAAA;;AACrB,gBAAI/G,WAAWI,EAAEuE,SAAF,CAAYoC,kBAAkB,KAAKS,qBAAnC,CAAf;AACA,iBAAKA,qBAAL,GAA6BpH,EAAEuE,SAAF,CAAY3E,QAAZ,CAA7B;;AAEAA,uBAAWI,EAAEyE,GAAF,CAAM7E,QAAN,EAAgB,KAAKyH,aAAL,CAAmBnC,IAAnB,CAAwB,IAAxB,CAAhB,CAAX;AACAtF,uBAAW,KAAK0H,kBAAL,CAAwB1H,QAAxB,CAAX;AACAA,uBAAW,KAAK2H,YAAL,CAAkB3H,QAAlB,CAAX;;AAEA;AACAA,uBAAWA,SAAS4H,KAAT,CAAe,CAAf,EAAkB,KAAKnD,KAAL,CAAW1B,KAAX,IAAoBlB,eAAekB,KAArD,CAAX;;AAEA,iBAAKwB,WAAL,GAAmBvE,QAAnB;AACA,iBAAK6H,sBAAL;;AAEA,iBAAK/D,QAAL,CAAc,YAAM;AAClB,6IAAa,OAAKS,WAAlB;AACD,aAFD;AAGD;;;wCAEa;AAAA;;AACZ,gBAAIiB,WAAWpF,EAAEyE,GAAF,CAAM,KAAKJ,KAAL,CAAW1C,WAAjB,EAA8B,UAAC0D,EAAD,EAAQ;AACnD,qBAAO,OAAK1B,aAAL,CAAmB2B,GAAnB,CAAuBD,EAAvB,EACNE,IADM,CACD,sBAAc;AAClB,oBAAImC,SAASlC,WAAWkC,MAAxB;AACA,oBAAIhF,aAAa,OAAK2B,KAAL,CAAW3B,UAAX,CAAsBD,KAAvC;AACA,oBAAI5C,gBAAgB,OAAKwE,KAAL,CAAWzC,OAAX,CAAmByD,EAAnB,CAApB;;AAEA;AACA,oBAAIsC,cAAcnC,WAAWoC,mBAAX,CAA+B/H,cAAckB,KAAd,CAAoBd,MAAnD,CAAlB;AACA,oBAAI4H,aAAarC,WAAWoC,mBAAX,CAA+B/H,cAAcmB,IAAd,CAAmBf,MAAlD,CAAjB;AACA,oBAAI6H,YAAYtC,WAAWoC,mBAAX,CAA+B/H,cAAcoB,WAAd,CAA0BhB,MAAzD,CAAhB;;AAEA,oBAAI8H,kBAAkB;AACpBzF,gCAAcI;AADM,iBAAtB;;AAIA,uBAAOgF,OAAOlB,WAAP,CAAmBmB,WAAnB,EAAgCE,UAAhC,EAA4CC,SAA5C,EAAuDC,eAAvD,CAAP;AACD,eAhBM,EAgBJxC,IAhBI,CAgBC,UAAC3F,QAAD,EAAc;AACpB,uBAAO,OAAKoI,eAAL,CAAqBpI,QAArB,EAA+ByF,EAA/B,CAAP;AACD,eAlBM,EAkBJE,IAlBI,CAkBC,UAAC3F,QAAD,EAAc;AACpB,uBAAO,OAAKqI,oBAAL,CAA0BrI,QAA1B,CAAP;AACD,eApBM,EAoBJ2F,IApBI,CAoBC,UAAC3F,QAAD,EAAc;AACpB,uBAAO,OAAKsI,iBAAL,CAAuBtI,QAAvB,EAAiCyF,EAAjC,CAAP;AACD,eAtBM,EAsBJE,IAtBI,CAsBC,UAAC3F,QAAD,EAAc;AACpB,uBAAO,OAAKuI,oBAAL,CAA0BvI,QAA1B,EAAoCyF,EAApC,CAAP;AACD,eAxBM,CAAP;AAyBD,aA1Bc,CAAf;;AA4BA,mBAAOI,QAAQC,GAAR,CAAYN,QAAZ,EACNG,IADM,CACD;AAAA,qBAAWvF,EAAEoI,OAAF,CAAUC,OAAV,CAAX;AAAA,aADC,CAAP;AAED;;;0CAEelE,W,EAAakB,E,EAAI;AAAA;;AAC/B;AACA,gBAAIiD,WAAWtI,EAAEyE,GAAF,CAAMN,WAAN,EAAmB,mBAAW;AAC3C,qBAAOjE,QAAQqI,SAAR,CAAkBC,OAAzB;AACD,aAFc,CAAf;;AAIA,mBAAO,KAAK7G,WAAL,CAAiB0D,EAAjB,EAAqBqC,MAArB,CAA4BM,eAA5B,CAA4CM,QAA5C,EACN/C,IADM,CACD,kBAAU;;AAEd;AACAvF,gBAAEyI,IAAF,CAAOtE,WAAP,EAAoB,mBAAW;AAC7B,oBAAIuE,QAAQ1I,EAAE2I,IAAF,CAAO5D,MAAP,EAAe,iBAAS;AAClC,yBAAO2D,MAAMF,OAAN,KAAkBtI,QAAQqI,SAAR,CAAkBC,OAA3C;AACD,iBAFW,CAAZ;;AAIA,oBAAIE,KAAJ,EAAW;AACTxI,0BAAQ0I,YAAR,GAAuB5I,EAAEyE,GAAF,CAAMiE,MAAME,YAAZ,EAA0B,OAAKC,iBAAL,CAAuB3D,IAAvB,QAA1B,CAAvB;AACD;;AAED,oBAAI,CAAChF,QAAQqI,SAAR,CAAkBC,OAAvB,EAAgC;AAC9BtI,0BAAQqI,SAAR,GAAoB,IAApB;AACD;AACF,eAZD;;AAcA,qBAAOpE,WAAP;AACD,aAnBM,CAAP;AAoBD;;;4CAEiB2E,G,EAAK;AACrB,gBAAIC,YAAYxI,OAAOyI,IAAP,CAAYF,IAAIG,KAAhB,CAAhB;AACA,gBAAI,KAAK5E,KAAL,CAAWpB,sBAAf,EAAuC;AACrC6F,kBAAII,IAAJ,GAAWH,UAAUI,MAAV,CAAiB,KAAK9E,KAAL,CAAWnB,gBAA5B,CAAX;AACD,aAFD,MAEO;AACL4F,kBAAII,IAAJ,GAAWH,UAAUI,MAAV,CAAiB,KAAKlF,iBAAtB,CAAX;AACD;AACD6E,gBAAIM,IAAJ,GAAWN,IAAIO,KAAJ,IAAa,EAAxB;AACA,gBAAIP,IAAIQ,IAAJ,IAAYR,IAAIS,OAApB,EAA6B;AAC3B,kBAAMC,YAAcV,IAAIQ,IAAJ,IAAY,EAA1B,WAAgCR,IAAIS,OAAJ,IAAe,EAA/C,CAAN;AACAT,kBAAIM,IAAJ,WAAiBI,QAAjB;AACD;AACD,mBAAOV,GAAP;AACD;;;4CAEiB3E,W,EAAakB,E,EAAI;AACjC;AACA,gBAAIxF,gBAAgB,KAAKwE,KAAL,CAAWzC,OAAX,CAAmByD,EAAnB,EAAuBnF,OAAvB,CAA+BD,MAAnD;AACAJ,4BAAgB,KAAK8B,WAAL,CAAiB0D,EAAjB,EAAqBuC,mBAArB,CAAyC/H,aAAzC,CAAhB;AACA,gBAAIA,aAAJ,EAAmB;AACjBsE,4BAAcxE,eAAewE,WAAf,EAA4BtE,aAA5B,CAAd;AACD;;AAED;AACA,gBAAM4J,SAAS,KAAKpF,KAAL,CAAWzC,OAAX,CAAmByD,EAAnB,CAAf;AACA,gBAAIoE,OAAOvI,IAAP,CAAYjB,MAAhB,EAAwB;AACtB,kBAAIyJ,aAAa,KAAK/H,WAAL,CAAiB0D,EAAjB,EAAqBuC,mBAArB,CAAyC6B,OAAOvI,IAAP,CAAYjB,MAArD,CAAjB;AACA;AACAyJ,2BAAaA,WAAWC,OAAX,CAAmB,IAAnB,EAAyB,EAAzB,EAA6BA,OAA7B,CAAqC,IAArC,EAA2C,EAA3C,CAAb;AACA,kBAAMzI,OAAO,KAAK0I,SAAL,CAAeF,UAAf,CAAb;AACAvF,4BAAcnE,EAAEC,MAAF,CAASkE,WAAT,EAAsB,mBAAW;AAC7C,uBAAOnE,EAAE6J,KAAF,CAAQ3I,IAAR,EAAc,UAAC4I,GAAD,EAAS;AAC5B,yBAAO9J,EAAE2I,IAAF,CAAOzI,QAAQgB,IAAf,EAAqB,EAAC4I,KAAKA,IAAIA,GAAV,EAAerH,OAAOqH,IAAIrH,KAA1B,EAArB,CAAP;AACD,iBAFM,CAAP;AAGD,eAJa,CAAd;AAKD;;AAED,mBAAO0B,WAAP;AACD;;;6CAEkBvE,Q,EAAU;AAAA;;AAC3B,gBAAIuE,cAAcnE,EAAEuE,SAAF,CAAY3E,QAAZ,CAAlB;;AAEA;AACA,gBAAI,KAAKyE,KAAL,CAAW/B,YAAX,KAA4B,gBAAhC,EAAkD;AAChD6B,4BAAcnE,EAAEC,MAAF,CAASkE,WAAT,EAAsB,mBAAW;AAC7C,uBAAO,CAACjE,QAAQ0I,YAAhB;AACD,eAFa,CAAd;AAGD,aAJD,MAIO,IAAI,KAAKvE,KAAL,CAAW/B,YAAX,KAA4B,cAAhC,EAAgD;AACrD6B,4BAAcnE,EAAEC,MAAF,CAASkE,WAAT,EAAsB,cAAtB,CAAd;AACD,aAFM,MAEA;AACLA,4BAAcA,WAAd;AACD;;AAED;AACA,gBAAI,CAAC,KAAKE,KAAL,CAAWhC,kBAAhB,EAAoC;AAClC8B,4BAAcnE,EAAEC,MAAF,CAASkE,WAAT,EAAsB,UAACjE,OAAD;AAAA,uBAAaA,QAAQ6J,WAAR,KAAwB,KAArC;AAAA,eAAtB,CAAd;AACD;;AAED;AACA5F,0BAAcnE,EAAEC,MAAF,CAASkE,WAAT,EAAsB,mBAAW;AAC7C,qBAAO,OAAKE,KAAL,CAAWlB,eAAX,CAA2BjD,QAAQkB,QAAnC,EAA6CG,IAApD;AACD,aAFa,CAAd;;AAIA,mBAAO4C,WAAP;AACD;;;+CAEoBvE,Q,EAAU;AAC7BI,cAAEyI,IAAF,CAAO7I,QAAP,EAAiB,UAACM,OAAD,EAAa;AAC5B,kBAAI8J,qBAAqBhK,EAAEiK,IAAF,CAAO/J,QAAQgK,KAAf,EAAsB,UAAClJ,IAAD;AAAA,uBAAUA,KAAKgJ,kBAAL,KAA4B,GAAtC;AAAA,eAAtB,CAAzB;AACA9J,sBAAQ6J,WAAR,GAAsBC,kBAAtB;AACD,aAHD;AAIA,mBAAOpK,QAAP;AACD;;;+CAEoBA,Q,EAAUyF,E,EAAI;AACjCrF,cAAEyI,IAAF,CAAO7I,QAAP,EAAiB,UAACM,OAAD,EAAa;AAC5BA,sBAAQsF,UAAR,GAAqBH,EAArB;AACD,aAFD;AAGA,mBAAOzF,QAAP;AACD;;;uCAEYuE,W,EAAa;AACxB,gBAAI,KAAKE,KAAL,CAAW9B,cAAX,CAA0BE,KAA1B,KAAoC,UAAxC,EAAoD;AAClD0B,4BAAcnE,EAAEmK,OAAF,CAAUhG,WAAV,EAAuB,CAAC,UAAD,EAAa,gBAAb,EAA+B,WAA/B,CAAvB,EAAoE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAApE,CAAd;AACD,aAFD,MAEO;AACLA,4BAAcnE,EAAEmK,OAAF,CAAUhG,WAAV,EAAuB,CAAC,gBAAD,EAAmB,UAAnB,EAA+B,WAA/B,CAAvB,EAAoE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAApE,CAAd;AACD;AACD,mBAAOA,WAAP;AACD;;;wCAEaiG,a,EAAe;AAC3B,gBAAIlK,UAAUF,EAAEuE,SAAF,CAAY6F,aAAZ,CAAd;AACA,gBAAIC,aAAanK,OAAjB;;AAEA;AACA,gBAAIA,QAAQgK,KAAR,IAAiBhK,QAAQgK,KAAR,CAAcvF,MAAnC,EAA2C;AACzC0F,yBAAWrJ,IAAX,GAAkBd,QAAQgK,KAAR,CAAc,CAAd,EAAiBZ,IAAnC;AACAe,yBAAWC,YAAX,GAA0BpK,QAAQgK,KAAR,CAAc,CAAd,EAAiBlJ,IAA3C;AACD;;AAED;AACA,gBAAId,QAAQgB,IAAR,IAAgBhB,QAAQgB,IAAR,CAAayD,MAAb,KAAwB,CAA5C,EAA+C;AAC7CzE,sBAAQgB,IAAR,GAAe,IAAf;AACD;;AAED;AACA,gBAAIhB,QAAQqK,QAAZ,EAAsB;AACpBrK,sBAAQqK,QAAR,GAAmBrK,QAAQqK,QAAR,CAAiBZ,OAAjB,CAAyB,IAAzB,EAA+B,MAA/B,CAAnB;AACD;;AAED;AACAzJ,oBAAQsK,cAAR,GAAyBC,OAAOvK,QAAQwK,UAAf,CAAzB;AACAL,yBAAa,KAAKM,oBAAL,CAA0BN,UAA1B,CAAb;AACAA,yBAAa,KAAKO,kBAAL,CAAwBP,UAAxB,CAAb;AACA,mBAAOA,UAAP;AACD;;;8CAEmBnK,O,EAAS;AAC3BA,sBAAU,KAAKyK,oBAAL,CAA0BzK,OAA1B,CAAV;AACAA,sBAAU,KAAK0K,kBAAL,CAAwB1K,OAAxB,CAAV;AACA,mBAAOA,OAAP;AACD;;;6CAEkBA,O,EAAS;AAC1B,gBAAIA,QAAQuC,KAAR,KAAkB,GAAtB,EAA2B;AACzB;AACAvC,sBAAQoB,KAAR,GAAgB,KAAK+C,KAAL,CAAWlB,eAAX,CAA2BjD,QAAQkB,QAAnC,EAA6CE,KAA7D;AACD,aAHD,MAGO;AACL;AACApB,sBAAQoB,KAAR,GAAgB,KAAK+C,KAAL,CAAWjB,YAA3B;AACD;AACDlD,oBAAQmB,QAAR,GAAmB,KAAKgD,KAAL,CAAWlB,eAAX,CAA2BjD,QAAQkB,QAAnC,EAA6CC,QAAhE;;AAEA;AACA,gBAAI,KAAKgD,KAAL,CAAWwG,aAAX,IAA4B3K,QAAQ0I,YAApC,IAAoD1I,QAAQ0I,YAAR,CAAqBjE,MAA7E,EAAqF;AACnFzE,sBAAQoB,KAAR,GAAgB,KAAK+C,KAAL,CAAWhB,aAA3B;AACD;;AAED,mBAAOnD,OAAP;AACD;;;+CAEoBA,O,EAAS;AAC5B,gBAAI,CAACA,QAAQsK,cAAb,EAA6B;AAC3BtK,sBAAQwK,UAAR,GAAqB,EAArB;AACAxK,sBAAQ4K,GAAR,GAAc,EAAd;AACA,qBAAO5K,OAAP;AACD;;AAED,gBAAI6I,YAAYxI,OAAOyI,IAAP,CAAY9I,QAAQsK,cAApB,CAAhB;AACA,gBAAI,KAAKnG,KAAL,CAAWpB,sBAAf,EAAuC;AACrC;AACA/C,sBAAQwK,UAAR,GAAqB3B,UAAUI,MAAV,CAAiB,KAAK9E,KAAL,CAAWnB,gBAA5B,CAArB;AACD,aAHD,MAGO;AACLhD,sBAAQwK,UAAR,GAAqB3B,UAAUI,MAAV,CAAiB,KAAKlF,iBAAtB,CAArB;AACD;AACD/D,oBAAQ4K,GAAR,GAAc/B,UAAUgC,OAAV,CAAkB,IAAlB,CAAd;AACA,mBAAO7K,OAAP;AACD;;;oCAES8K,M,EAAQ;AAChB,gBAAI,CAACA,MAAL,EAAa;AACX,qBAAO,EAAP;AACD;;AAED,gBAAI9J,OAAOlB,EAAEyE,GAAF,CAAMuG,OAAOC,KAAP,CAAa,GAAb,CAAN,EAAyB,UAACnB,GAAD;AAAA,qBAASA,IAAIoB,IAAJ,EAAT;AAAA,aAAzB,CAAX;AACAhK,mBAAOlB,EAAEyE,GAAF,CAAMvD,IAAN,EAAY,UAAC4I,GAAD,EAAS;AAC1B,kBAAMqB,WAAWrB,IAAImB,KAAJ,CAAU,GAAV,CAAjB;AACA,qBAAO,EAACnB,KAAKqB,SAAS,CAAT,EAAYD,IAAZ,EAAN,EAA0BzI,OAAO0I,SAAS,CAAT,EAAYD,IAAZ,EAAjC,EAAP;AACD,aAHM,CAAP;AAIA,mBAAOhK,IAAP;AACD;;;uCAEYA,I,EAAM;AACjB,mBAAOlB,EAAEyE,GAAF,CAAMvD,IAAN,EAAY,UAAC4I,GAAD;AAAA,qBAAYA,IAAIA,GAAhB,SAAuBA,IAAIrH,KAA3B;AAAA,aAAZ,EAAgD2I,IAAhD,CAAqD,IAArD,CAAP;AACD;;;uCAEYtB,G,EAAKzE,E,EAAI;AACpB,gBAAIgG,YAAY,KAAKhH,KAAL,CAAWzC,OAAX,CAAmByD,EAAnB,EAAuBnE,IAAvB,CAA4BjB,MAA5C;AACA,gBAAIqL,aAAa,KAAK1B,SAAL,CAAeyB,SAAf,CAAjB;AACA,gBAAIE,SAAS,EAACzB,KAAKA,IAAIA,GAAV,EAAerH,OAAOqH,IAAIrH,KAA1B,EAAb;AACA6I,uBAAW1G,IAAX,CAAgB2G,MAAhB;AACAD,yBAAatL,EAAEwL,QAAF,CAAWF,UAAX,EAAuBtL,EAAEyL,OAAzB,CAAb;AACA,gBAAIC,YAAY,KAAKC,YAAL,CAAkBL,UAAlB,CAAhB;AACA,iBAAKjH,KAAL,CAAWzC,OAAX,CAAmByD,EAAnB,EAAuBnE,IAAvB,CAA4BjB,MAA5B,GAAqCyL,SAArC;AACA,iBAAKE,OAAL;AACD;;;wCAEa1L,O,EAAS;AACrBA,oBAAQ2L,WAAR,GAAsB,CAAC3L,QAAQ2L,WAA/B;AACD;;;6CAEkB3L,O,EAAS+G,O,EAAS;AAAA;;AACnC,gBAAIuB,UAAUtI,QAAQqI,SAAR,GAAoBrI,QAAQqI,SAAR,CAAkBC,OAAtC,GAAgD,IAA9D;AACA,gBAAIsD,eAAe,KAAKjI,UAAL,CAAgBuF,IAAhB,CAAqBE,IAAxC;AACA,gBAAIyC,cAAcD,eAAe,cAAf,GAAgC7E,OAAlD;AACA,mBAAO,KAAKtD,aAAL,CAAmB2B,GAAnB,CAAuBpF,QAAQsF,UAA/B,EACND,IADM,CACD,sBAAc;AAClB,kBAAMyG,eAAe,OAAKnI,UAAL,CAAgBoI,QAAhB,IAA4B,OAAKpI,UAAL,CAAgBqI,cAAjE;AACA,kBAAI1G,WAAW2G,uBAAX,IAAsC,CAACH,YAA3C,EAAyD;AACvD,uBAAOvG,QAAQ2G,MAAR,CAAe,EAACnF,SAAS,gDAAV,EAAf,CAAP;AACD;AACD,kBAAIuB,OAAJ,EAAa;AACX,uBAAOhD,WAAWkC,MAAX,CAAkB2E,SAAlB,CAA4BC,gBAA5B,CAA6C9D,OAA7C,EAAsDuD,WAAtD,CAAP;AACD,eAFD,MAEO;AACL,uBAAOtG,QAAQ2G,MAAR,CAAe,EAACnF,SAAS,gDAAV,EAAf,CAAP;AACD;AACF,aAXM,EAYN1B,IAZM,CAYD,KAAKJ,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAZC,EAaN0B,KAbM,CAaA,UAACC,GAAD,EAAS;AACd,qBAAKR,KAAL,GAAaQ,IAAII,OAAJ,IAAe,mBAA5B;AACA,qBAAKlC,MAAL,CAAYoC,IAAZ,CAAiB,YAAjB,EAA+BN,GAA/B;AACAE,sBAAQC,GAAR,CAAY,mBAAZ,EAAiCH,GAAjC;AACD,aAjBM,CAAP;AAkBD;;;mDAEwB;AACvB,gBAAIhE,WAAW,KAAKwB,KAAL,CAAWxB,QAAX,IAAuBpB,eAAeoB,QAArD;AACA,gBAAI0J,WAAW,KAAKrI,SAAL,GAAiBrB,QAAhC;AACA,gBAAI2J,SAASC,KAAKC,GAAL,CAASH,WAAW1J,QAApB,EAA8B,KAAKsB,WAAL,CAAiBQ,MAA/C,CAAb;AACA,iBAAKP,mBAAL,GAA2B,KAAKD,WAAL,CAAiBqD,KAAjB,CAAuB+E,QAAvB,EAAiCC,MAAjC,CAA3B;AACA,mBAAO,KAAKpI,mBAAZ;AACD;;;yCAEclE,O,EAAS;AACtB,gBAAIc,OAAO,EAAX;AACA,gBAAI,KAAKqD,KAAL,CAAWxC,SAAX,IAAwB,KAAKwC,KAAL,CAAWvC,iBAAvC,EAA0D;AACxDd,qBAAUd,QAAQc,IAAlB,UAA2Bd,QAAQoK,YAAnC;AACD,aAFD,MAEO,IAAI,KAAKjG,KAAL,CAAWxC,SAAX,IAAwB,KAAKwC,KAAL,CAAWvC,iBAAvC,EAA0D;AAC/Dd,qBAAO,KAAKqD,KAAL,CAAWxC,SAAX,GAAuB3B,QAAQc,IAA/B,GAAsCd,QAAQoK,YAArD;AACD;;AAED,mBAAOtJ,IAAP;AACD;;;2CAEgBd,O,EAAS;AACxB,gBAAIyM,aAAa,EAAjB;AACA,gBAAI,KAAKtI,KAAL,CAAWtC,UAAf,EAA2B;AACzB,kBAAI6K,SAAS5M,EAAEyE,GAAF,CAAMvE,QAAQ0M,MAAd,EAAsB,MAAtB,EAA8BxB,IAA9B,CAAmC,IAAnC,CAAb;AACAuB,mCAAmBC,MAAnB;AACD;;AAED,mBAAOD,UAAP;AACD;;;4CAEiBzM,O,EAAS;AACzB,gBAAI2M,YAAY,EAAhB;AACA,gBAAI3M,QAAQuC,KAAR,KAAkB,GAAtB,EAA2B;AACzB,kBAAIvC,QAAQkB,QAAR,IAAoB,CAAxB,EAA2B;AACzByL,4BAAY,kBAAZ;AACD,eAFD,MAEO;AACLA,4BAAY,iBAAZ;AACD;AACF,aAND,MAMO;AACLA,0BAAY,gBAAZ;AACD;;AAED,gBAAI,KAAKxI,KAAL,CAAWtB,kBAAX,IAAiC,KAAK+J,YAAL,CAAkB5M,OAAlB,CAArC,EAAiE;AAC/D2M,2BAAa,0BAAb;AACD;AACD,mBAAOA,SAAP;AACD;;;sDAE2B1J,e,EAAiB;AAC3C,gBAAI0J,YAAY,iBAAhB;AACA,gBAAI1J,gBAAgB/B,QAAhB,IAA4B,CAAhC,EAAmC;AACjCyL,0BAAY,kBAAZ;AACD;AACD,mBAAOA,SAAP;AACD;;;6CAEkB3M,O,EAAS;AAC1B,gBAAI6M,cAAc,EAAlB;;AAEA,gBAAI7M,QAAQuC,KAAR,KAAkB,GAAtB,EAA2B;AACzBsK,4BAAc,sBAAd;AACD,aAFD,MAEO;AACLA,4BAAc,gBAAd;AACD;;AAED,gBAAI,KAAK1I,KAAL,CAAWtB,kBAAX,IAAiC,KAAK+J,YAAL,CAAkB5M,OAAlB,CAArC,EAAiE;AAC/D6M,6BAAe,0BAAf;AACD;;AAED,mBAAOA,WAAP;AACD;;;wCAEa7M,O,EAAS;AACrB,gBAAM8M,YAAY9M,QAAQoB,KAA1B;AACA,gBAAM2L,cAAc,KAAKpJ,UAAL,CAAgBuF,IAAhB,CAAqB8D,UAArB,GAAkC,SAAlC,GAA8C,SAAlE;AACA,gBAAI,KAAKrJ,UAAL,CAAgBuF,IAAhB,CAAqB8D,UAAzB,EAAqC;AACnC,kDAAkCD,WAAlC,UAAkDD,SAAlD;AACD;AACD,gDAAkCA,SAAlC,UAAgDC,WAAhD;AACD;;;uCAEY/M,O,EAAS;AACpB,gBAAI;AACF,kBAAMiN,sBAAsBrN,MAAMsN,aAAN,CAAoB,KAAK/I,KAAL,CAAWrB,kBAAX,IAAiCvB,eAAeuB,kBAApE,CAA5B;AACA,kBAAMqK,cAAepH,KAAKqH,GAAL,KAAapN,QAAQsK,cAAR,GAAyB,IAA3D;AACA,qBAAO6C,cAAcF,mBAArB;AACD,aAJD,CAIE,OAAOI,CAAP,EAAU;AACV,qBAAO,KAAP;AACD;AACF;;;+BAEIxJ,K,EAAOyJ,I,EAAMC,K,EAAOC,I,EAAM;AAC7B,gBAAIrJ,QAAQqJ,KAAKrJ,KAAjB;AACA,gBAAIsJ,YAAY,CAAhB;AACA,gBAAIxJ,cAAcuJ,KAAKvJ,WAAvB;;AAEAJ,kBAAM6J,WAAN,CAAkB,CAAC,0BAAD,EAA6B,kBAA7B,CAAlB,EAAoEC,WAApE;AACAL,iBAAKxI,EAAL,CAAQ,OAAR,EAAiB,2BAAjB,EAA8C8I,UAA9C;AACAJ,iBAAK3I,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,UAAC+I,UAAD,EAAgB;AACvC5J,4BAAc4J,cAAc5J,WAA5B;AACA0J;AACD,aAHD;;AAKA,qBAASG,gBAAT,GAA4B;AAC1B,kBAAIC,cAAcP,KAAKQ,MAAvB;AACA,kBAAIP,YAAY,CAAhB,EAAmB;AACjBM,+BAAe,EAAf;AACD;AACD,qBAAOA,cAAc,IAArB;AACD;;AAED,qBAASH,UAAT,CAAoBP,CAApB,EAAuB;AACrB,kBAAIY,KAAK7N,EAAEiN,EAAEa,aAAJ,CAAT;AACAV,mBAAKxJ,SAAL,GAAkBmK,SAASF,GAAG3L,IAAH,EAAT,EAAoB,EAApB,IAAwB,CAA1C;;AAEA,kBAAIK,WAAWwB,MAAMxB,QAAN,IAAkB,EAAjC;AACA,kBAAI0J,WAAWmB,KAAKxJ,SAAL,GAAiBrB,QAAhC;AACA,kBAAI2J,SAASC,KAAKC,GAAL,CAASH,WAAW1J,QAApB,EAA8BsB,YAAYQ,MAA1C,CAAb;AACA+I,mBAAKtJ,mBAAL,GAA2BD,YAAYqD,KAAZ,CAAkB+E,QAAlB,EAA4BC,MAA5B,CAA3B;;AAEAzI,oBAAMuK,MAAN,CAAa,YAAM;AACjBT;AACD,eAFD;AAGD;;AAED,qBAASU,wBAAT,CAAkCC,UAAlC,EAA8C;AAC5CA,yBAAWC,KAAX;;AAEA,kBAAI5L,WAAWwB,MAAMxB,QAAN,IAAkB,CAAjC;AACA8K,0BAAYlB,KAAKiC,IAAL,CAAUvK,YAAYQ,MAAZ,GAAqB9B,QAA/B,CAAZ;AACA,kBAAI8K,cAAc,CAAlB,EAAqB;AACnB;AACD;;AAED,kBAAIgB,YAAYlC,KAAKmC,GAAL,CAASlB,KAAKxJ,SAAL,GAAiB,CAA1B,EAA6B,CAA7B,CAAhB;AACA,kBAAI2K,UAAUpC,KAAKC,GAAL,CAASiB,SAAT,EAAoBgB,YAAY,CAAhC,CAAd;;AAEA,kBAAIG,iBAAiBxO,EAAE,WAAF,CAArB;;AAEA,mBAAK,IAAIyO,IAAIJ,SAAb,EAAwBI,IAAIF,OAA5B,EAAqCE,GAArC,EAA0C;AACxC,oBAAIC,cAAcD,MAAMrB,KAAKxJ,SAAX,GAAuB,QAAvB,GAAkC,EAApD;AACA,oBAAI+K,eAAe3O,EAAE,oDAAoD0O,WAApD,GAAkE,IAAlE,IAA0ED,IAAE,CAA5E,IAAiF,WAAnF,CAAnB;AACAD,+BAAeI,MAAf,CAAsBD,YAAtB;AACD;;AAEDT,yBAAWU,MAAX,CAAkBJ,cAAlB;AACD;;AAED,qBAASK,WAAT,GAAuB;AACrB,kBAAMvM,WAAWyL,SAAShK,MAAMzB,QAAN,CAAe4E,KAAf,CAAqB,CAArB,EAAwBnD,MAAMzB,QAAN,CAAe+B,MAAf,GAAwB,CAAhD,CAAT,CAAjB;AACA,kBAAIyK,kBAAkB5B,KAAK7E,IAAL,CAAU,kBAAV,CAAtB;AACA,kBAAI/F,YAAYA,aAAa,GAA7B,EAAkC;AAChCwM,gCAAgBzG,IAAhB,CAAqB,wBAArB,EAA+C0G,GAA/C,CAAmD;AACjD,+BAAazM,WAAW,GADyB;AAEjD,4BAAUA,WAAW,GAAX,GAAiB,CAAjB,GAAqB;AAFkB,iBAAnD;AAIAwM,gCAAgBzG,IAAhB,CAAqB,wBAArB,EAA+C0G,GAA/C,CAAmD,EAAC,aAAazM,WAAW,GAAzB,EAAnD;AACAwM,gCAAgBzG,IAAhB,CAAqB,wBAArB,EAA+C0G,GAA/C,CAAmD,EAAC,aAAazM,WAAW,GAAX,GAAiB,GAA/B,EAAnD;AACAwM,gCAAgBzG,IAAhB,CAAqB,yBAArB,EAAgD0G,GAAhD,CAAoD,EAAC,aAAazM,WAAW,GAAX,GAAiB,GAA/B,EAApD;AACAwM,gCAAgBzG,IAAhB,CAAqB,UAArB,EAAiC0G,GAAjC,CAAqC,EAAC,aAAazM,WAAW,GAAX,GAAiB,GAA/B,EAArC;AACAwM,gCAAgBzG,IAAhB,CAAqB,UAArB,EAAiC0G,GAAjC,CAAqC,EAAC,eAAezM,WAAW,GAAX,GAAiB,EAAjB,GAAsB,IAAtC,EAArC;AACD,eAVD,MAUO;AACL;AACAwM,gCAAgBzG,IAAhB,CAAqB,wBAArB,EAA+C0G,GAA/C,CAAmD,EAAC,aAAa,EAAd,EAAkB,gBAAgB,EAAlC,EAAnD;AACAD,gCAAgBzG,IAAhB,CAAqB,wBAArB,EAA+C0G,GAA/C,CAAmD,EAAC,aAAa,EAAd,EAAnD;AACAD,gCAAgBzG,IAAhB,CAAqB,wBAArB,EAA+C0G,GAA/C,CAAmD,EAAC,aAAa,EAAd,EAAnD;AACAD,gCAAgBzG,IAAhB,CAAqB,yBAArB,EAAgD0G,GAAhD,CAAoD,EAAC,aAAa,EAAd,EAApD;AACAD,gCAAgBzG,IAAhB,CAAqB,UAArB,EAAiC0G,GAAjC,CAAqC,EAAC,aAAa,EAAd,EAArC;AACAD,gCAAgBzG,IAAhB,CAAqB,UAArB,EAAiC0G,GAAjC,CAAqC,EAAC,eAAe,EAAhB,EAArC;AACD;AACF;;AAED,qBAASxB,WAAT,GAAuB;AACrB,kBAAIyB,WAAW9B,KAAK7E,IAAL,CAAU,wBAAV,CAAf;AACA,kBAAI6F,aAAahB,KAAK7E,IAAL,CAAU,wBAAV,CAAjB;AACA4F,uCAAyBC,UAAzB;AACAc,uBAASD,GAAT,CAAa,EAAC,cAAcrB,kBAAf,EAAb;AACAsB,uBAASD,GAAT,CAAa,EAAC,UAAUrB,kBAAX,EAAb;AACAmB;AACAzB,mBAAK6B,kBAAL;AACD;;AAED,gBAAIC,gBAAgBzL,MAAM0L,GAAN,CAAU,UAAV,EAAsB,YAAW;AACnDjC,mBAAKkC,GAAL,CAAS,OAAT,EAAkB,2BAAlB;AACAF;AACD,aAHmB,CAApB;AAID;;;;QA9kBmChP,S;;;;AAilBtC+C,uBAAiBoM,WAAjB,GAA+B,+EAA/B","file":"triggers_panel_ctrl.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport * as utils from '../datasource-zabbix/utils';\nimport {PanelCtrl} from 'app/plugins/sdk';\nimport {triggerPanelOptionsTab} from './options_tab';\nimport {triggerPanelTriggersTab} from './triggers_tab';\nimport {migratePanelSchema, CURRENT_SCHEMA_VERSION} from './migrations';\n\nconst ZABBIX_DS_ID = 'alexanderzobnin-zabbix-datasource';\n\nexport const DEFAULT_TARGET = {\n  group: {filter: \"\"},\n  host: {filter: \"\"},\n  application: {filter: \"\"},\n  trigger: {filter: \"\"},\n  tags: {filter: \"\"},\n};\n\nexport const DEFAULT_SEVERITY = [\n  { priority: 0, severity: 'Not classified',  color: 'rgb(108, 108, 108)', show: true},\n  { priority: 1, severity: 'Information',     color: 'rgb(120, 158, 183)', show: true},\n  { priority: 2, severity: 'Warning',         color: 'rgb(175, 180, 36)', show: true},\n  { priority: 3, severity: 'Average',         color: 'rgb(255, 137, 30)', show: true},\n  { priority: 4, severity: 'High',            color: 'rgb(255, 101, 72)', show: true},\n  { priority: 5, severity: 'Disaster',        color: 'rgb(215, 0, 0)', show: true},\n];\n\nconst DEFAULT_TIME_FORMAT = \"DD MMM YYYY HH:mm:ss\";\n\nexport const PANEL_DEFAULTS = {\n  schemaVersion: CURRENT_SCHEMA_VERSION,\n  datasources: [],\n  targets: {},\n  // Fields\n  hostField: true,\n  hostTechNameField: false,\n  hostGroups: false,\n  showTags: true,\n  statusField: true,\n  severityField: true,\n  descriptionField: true,\n  descriptionAtNewLine: false,\n  // Options\n  hostsInMaintenance: true,\n  showTriggers: 'all triggers',\n  sortTriggersBy: { text: 'last change', value: 'lastchange' },\n  showEvents: { text: 'Problems', value: '1' },\n  limit: 100,\n  // View options\n  fontSize: '100%',\n  pageSize: 10,\n  highlightBackground: false,\n  highlightNewEvents: false,\n  highlightNewerThan: '1h',\n  customLastChangeFormat: false,\n  lastChangeFormat: \"\",\n  // Triggers severity and colors\n  triggerSeverity: DEFAULT_SEVERITY,\n  okEventColor: 'rgb(56, 189, 113)',\n  ackEventColor: 'rgb(56, 219, 156)'\n};\n\nconst triggerStatusMap = {\n  '0': 'OK',\n  '1': 'PROBLEM'\n};\n\nexport class TriggerPanelCtrl extends PanelCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $timeout, datasourceSrv, templateSrv, contextSrv, dashboardSrv) {\n    super($scope, $injector);\n    this.datasourceSrv = datasourceSrv;\n    this.templateSrv = templateSrv;\n    this.contextSrv = contextSrv;\n    this.dashboardSrv = dashboardSrv;\n    this.scope = $scope;\n    this.$timeout = $timeout;\n\n    this.editorTabIndex = 1;\n    this.triggerStatusMap = triggerStatusMap;\n    this.defaultTimeFormat = DEFAULT_TIME_FORMAT;\n    this.pageIndex = 0;\n    this.triggerList = [];\n    this.currentTriggersPage = [];\n    this.datasources = {};\n\n    this.panel = migratePanelSchema(this.panel);\n    _.defaultsDeep(this.panel, _.cloneDeep(PANEL_DEFAULTS));\n\n    this.available_datasources = _.map(this.getZabbixDataSources(), 'name');\n    if (this.panel.datasources.length === 0) {\n      this.panel.datasources.push(this.available_datasources[0]);\n    }\n    if (_.isEmpty(this.panel.targets)) {\n      this.panel.targets[this.panel.datasources[0]] = DEFAULT_TARGET;\n    }\n\n    this.initDatasources();\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n  }\n\n  initDatasources() {\n    let promises = _.map(this.panel.datasources, (ds) => {\n      // Load datasource\n      return this.datasourceSrv.get(ds)\n      .then(datasource => {\n        this.datasources[ds] = datasource;\n        return datasource;\n      });\n    });\n    return Promise.all(promises);\n  }\n\n  getZabbixDataSources() {\n    return _.filter(this.datasourceSrv.getMetricSources(), datasource => {\n      return datasource.meta.id === ZABBIX_DS_ID && datasource.value;\n    });\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Triggers', triggerPanelTriggersTab, 1);\n    this.addEditorTab('Options', triggerPanelOptionsTab, 2);\n  }\n\n  setTimeQueryStart() {\n    this.timing.queryStart = new Date().getTime();\n  }\n\n  setTimeQueryEnd() {\n    this.timing.queryEnd = new Date().getTime();\n  }\n\n  onRefresh() {\n    // ignore fetching data if another panel is in fullscreen\n    if (this.otherPanelInFullscreenMode()) { return; }\n\n    // clear loading/error state\n    delete this.error;\n    this.loading = true;\n    this.setTimeQueryStart();\n    this.pageIndex = 0;\n\n    return this.getTriggers()\n    .then(zabbixTriggers => {\n      // Notify panel that request is finished\n      this.loading = false;\n      this.setTimeQueryEnd();\n\n      this.render(zabbixTriggers);\n    })\n    .catch(err => {\n      // if cancelled  keep loading set to true\n      if (err.cancelled) {\n        console.log('Panel request cancelled', err);\n        return;\n      }\n\n      this.loading = false;\n      this.error = err.message || \"Request Error\";\n\n      if (err.data) {\n        if (err.data.message) {\n          this.error = err.data.message;\n        }\n        if (err.data.error) {\n          this.error = err.data.error;\n        }\n      }\n\n      this.events.emit('data-error', err);\n      console.log('Panel data error:', err);\n    });\n  }\n\n  render(zabbixTriggers) {\n    let triggers = _.cloneDeep(zabbixTriggers || this.triggerListUnfiltered);\n    this.triggerListUnfiltered = _.cloneDeep(triggers);\n\n    triggers = _.map(triggers, this.formatTrigger.bind(this));\n    triggers = this.filterTriggersPost(triggers);\n    triggers = this.sortTriggers(triggers);\n\n    // Limit triggers number\n    triggers = triggers.slice(0, this.panel.limit || PANEL_DEFAULTS.limit);\n\n    this.triggerList = triggers;\n    this.getCurrentTriggersPage();\n\n    this.$timeout(() => {\n      super.render(this.triggerList);\n    });\n  }\n\n  getTriggers() {\n    let promises = _.map(this.panel.datasources, (ds) => {\n      return this.datasourceSrv.get(ds)\n      .then(datasource => {\n        var zabbix = datasource.zabbix;\n        var showEvents = this.panel.showEvents.value;\n        var triggerFilter = this.panel.targets[ds];\n\n        // Replace template variables\n        var groupFilter = datasource.replaceTemplateVars(triggerFilter.group.filter);\n        var hostFilter = datasource.replaceTemplateVars(triggerFilter.host.filter);\n        var appFilter = datasource.replaceTemplateVars(triggerFilter.application.filter);\n\n        let triggersOptions = {\n          showTriggers: showEvents\n        };\n\n        return zabbix.getTriggers(groupFilter, hostFilter, appFilter, triggersOptions);\n      }).then((triggers) => {\n        return this.getAcknowledges(triggers, ds);\n      }).then((triggers) => {\n        return this.setMaintenanceStatus(triggers);\n      }).then((triggers) => {\n        return this.filterTriggersPre(triggers, ds);\n      }).then((triggers) => {\n        return this.addTriggerDataSource(triggers, ds);\n      });\n    });\n\n    return Promise.all(promises)\n    .then(results => _.flatten(results));\n  }\n\n  getAcknowledges(triggerList, ds) {\n    // Request acknowledges for trigger\n    var eventids = _.map(triggerList, trigger => {\n      return trigger.lastEvent.eventid;\n    });\n\n    return this.datasources[ds].zabbix.getAcknowledges(eventids)\n    .then(events => {\n\n      // Map events to triggers\n      _.each(triggerList, trigger => {\n        var event = _.find(events, event => {\n          return event.eventid === trigger.lastEvent.eventid;\n        });\n\n        if (event) {\n          trigger.acknowledges = _.map(event.acknowledges, this.formatAcknowledge.bind(this));\n        }\n\n        if (!trigger.lastEvent.eventid) {\n          trigger.lastEvent = null;\n        }\n      });\n\n      return triggerList;\n    });\n  }\n\n  formatAcknowledge(ack) {\n    let timestamp = moment.unix(ack.clock);\n    if (this.panel.customLastChangeFormat) {\n      ack.time = timestamp.format(this.panel.lastChangeFormat);\n    } else {\n      ack.time = timestamp.format(this.defaultTimeFormat);\n    }\n    ack.user = ack.alias || '';\n    if (ack.name || ack.surname) {\n      const fullName = `${ack.name || ''} ${ack.surname || ''}`;\n      ack.user += ` (${fullName})`;\n    }\n    return ack;\n  }\n\n  filterTriggersPre(triggerList, ds) {\n    // Filter triggers by description\n    let triggerFilter = this.panel.targets[ds].trigger.filter;\n    triggerFilter = this.datasources[ds].replaceTemplateVars(triggerFilter);\n    if (triggerFilter) {\n      triggerList = filterTriggers(triggerList, triggerFilter);\n    }\n\n    // Filter by tags\n    const target = this.panel.targets[ds];\n    if (target.tags.filter) {\n      let tagsFilter = this.datasources[ds].replaceTemplateVars(target.tags.filter);\n      // replaceTemplateVars() builds regex-like string, so we should trim it.\n      tagsFilter = tagsFilter.replace('/^', '').replace('$/', '');\n      const tags = this.parseTags(tagsFilter);\n      triggerList = _.filter(triggerList, trigger => {\n        return _.every(tags, (tag) => {\n          return _.find(trigger.tags, {tag: tag.tag, value: tag.value});\n        });\n      });\n    }\n\n    return triggerList;\n  }\n\n  filterTriggersPost(triggers) {\n    let triggerList = _.cloneDeep(triggers);\n\n    // Filter acknowledged triggers\n    if (this.panel.showTriggers === 'unacknowledged') {\n      triggerList = _.filter(triggerList, trigger => {\n        return !trigger.acknowledges;\n      });\n    } else if (this.panel.showTriggers === 'acknowledged') {\n      triggerList = _.filter(triggerList, 'acknowledges');\n    } else {\n      triggerList = triggerList;\n    }\n\n    // Filter by maintenance status\n    if (!this.panel.hostsInMaintenance) {\n      triggerList = _.filter(triggerList, (trigger) => trigger.maintenance === false);\n    }\n\n    // Filter triggers by severity\n    triggerList = _.filter(triggerList, trigger => {\n      return this.panel.triggerSeverity[trigger.priority].show;\n    });\n\n    return triggerList;\n  }\n\n  setMaintenanceStatus(triggers) {\n    _.each(triggers, (trigger) => {\n      let maintenance_status = _.some(trigger.hosts, (host) => host.maintenance_status === '1');\n      trigger.maintenance = maintenance_status;\n    });\n    return triggers;\n  }\n\n  addTriggerDataSource(triggers, ds) {\n    _.each(triggers, (trigger) => {\n      trigger.datasource = ds;\n    });\n    return triggers;\n  }\n\n  sortTriggers(triggerList) {\n    if (this.panel.sortTriggersBy.value === 'priority') {\n      triggerList = _.orderBy(triggerList, ['priority', 'lastchangeUnix', 'triggerid'], ['desc', 'desc', 'desc']);\n    } else {\n      triggerList = _.orderBy(triggerList, ['lastchangeUnix', 'priority', 'triggerid'], ['desc', 'desc', 'desc']);\n    }\n    return triggerList;\n  }\n\n  formatTrigger(zabbixTrigger) {\n    let trigger = _.cloneDeep(zabbixTrigger);\n    let triggerObj = trigger;\n\n    // Set host that the trigger belongs\n    if (trigger.hosts && trigger.hosts.length) {\n      triggerObj.host = trigger.hosts[0].name;\n      triggerObj.hostTechName = trigger.hosts[0].host;\n    }\n\n    // Set tags if present\n    if (trigger.tags && trigger.tags.length === 0) {\n      trigger.tags = null;\n    }\n\n    // Handle multi-line description\n    if (trigger.comments) {\n      trigger.comments = trigger.comments.replace('\\n', '<br>');\n    }\n\n    // Format last change and age\n    trigger.lastchangeUnix = Number(trigger.lastchange);\n    triggerObj = this.setTriggerLastChange(triggerObj);\n    triggerObj = this.setTriggerSeverity(triggerObj);\n    return triggerObj;\n  }\n\n  updateTriggerFormat(trigger) {\n    trigger = this.setTriggerLastChange(trigger);\n    trigger = this.setTriggerSeverity(trigger);\n    return trigger;\n  }\n\n  setTriggerSeverity(trigger) {\n    if (trigger.value === '1') {\n      // Problem state\n      trigger.color = this.panel.triggerSeverity[trigger.priority].color;\n    } else {\n      // OK state\n      trigger.color = this.panel.okEventColor;\n    }\n    trigger.severity = this.panel.triggerSeverity[trigger.priority].severity;\n\n    // Mark acknowledged triggers with different color\n    if (this.panel.markAckEvents && trigger.acknowledges && trigger.acknowledges.length) {\n      trigger.color = this.panel.ackEventColor;\n    }\n\n    return trigger;\n  }\n\n  setTriggerLastChange(trigger) {\n    if (!trigger.lastchangeUnix) {\n      trigger.lastchange = \"\";\n      trigger.age = \"\";\n      return trigger;\n    }\n\n    let timestamp = moment.unix(trigger.lastchangeUnix);\n    if (this.panel.customLastChangeFormat) {\n      // User defined format\n      trigger.lastchange = timestamp.format(this.panel.lastChangeFormat);\n    } else {\n      trigger.lastchange = timestamp.format(this.defaultTimeFormat);\n    }\n    trigger.age = timestamp.fromNow(true);\n    return trigger;\n  }\n\n  parseTags(tagStr) {\n    if (!tagStr) {\n      return [];\n    }\n\n    let tags = _.map(tagStr.split(','), (tag) => tag.trim());\n    tags = _.map(tags, (tag) => {\n      const tagParts = tag.split(':');\n      return {tag: tagParts[0].trim(), value: tagParts[1].trim()};\n    });\n    return tags;\n  }\n\n  tagsToString(tags) {\n    return _.map(tags, (tag) => `${tag.tag}:${tag.value}`).join(', ');\n  }\n\n  addTagFilter(tag, ds) {\n    let tagFilter = this.panel.targets[ds].tags.filter;\n    let targetTags = this.parseTags(tagFilter);\n    let newTag = {tag: tag.tag, value: tag.value};\n    targetTags.push(newTag);\n    targetTags = _.uniqWith(targetTags, _.isEqual);\n    let newFilter = this.tagsToString(targetTags);\n    this.panel.targets[ds].tags.filter = newFilter;\n    this.refresh();\n  }\n\n  switchComment(trigger) {\n    trigger.showComment = !trigger.showComment;\n  }\n\n  acknowledgeTrigger(trigger, message) {\n    let eventid = trigger.lastEvent ? trigger.lastEvent.eventid : null;\n    let grafana_user = this.contextSrv.user.name;\n    let ack_message = grafana_user + ' (Grafana): ' + message;\n    return this.datasourceSrv.get(trigger.datasource)\n    .then(datasource => {\n      const userIsEditor = this.contextSrv.isEditor || this.contextSrv.isGrafanaAdmin;\n      if (datasource.disableReadOnlyUsersAck && !userIsEditor) {\n        return Promise.reject({message: 'You have no permissions to acknowledge events.'});\n      }\n      if (eventid) {\n        return datasource.zabbix.zabbixAPI.acknowledgeEvent(eventid, ack_message);\n      } else {\n        return Promise.reject({message: 'Trigger has no events. Nothing to acknowledge.'});\n      }\n    })\n    .then(this.onRefresh.bind(this))\n    .catch((err) => {\n      this.error = err.message || \"Acknowledge Error\";\n      this.events.emit('data-error', err);\n      console.log('Panel data error:', err);\n    });\n  }\n\n  getCurrentTriggersPage() {\n    let pageSize = this.panel.pageSize || PANEL_DEFAULTS.pageSize;\n    let startPos = this.pageIndex * pageSize;\n    let endPos = Math.min(startPos + pageSize, this.triggerList.length);\n    this.currentTriggersPage = this.triggerList.slice(startPos, endPos);\n    return this.currentTriggersPage;\n  }\n\n  formatHostName(trigger) {\n    let host = \"\";\n    if (this.panel.hostField && this.panel.hostTechNameField) {\n      host = `${trigger.host} (${trigger.hostTechName})`;\n    } else if (this.panel.hostField || this.panel.hostTechNameField) {\n      host = this.panel.hostField ? trigger.host : trigger.hostTechName;\n    }\n\n    return host;\n  }\n\n  formatHostGroups(trigger) {\n    let groupNames = \"\";\n    if (this.panel.hostGroups) {\n      let groups = _.map(trigger.groups, 'name').join(', ');\n      groupNames += `[ ${groups} ]`;\n    }\n\n    return groupNames;\n  }\n\n  getAlertIconClass(trigger) {\n    let iconClass = '';\n    if (trigger.value === '1') {\n      if (trigger.priority >= 3) {\n        iconClass = 'icon-gf-critical';\n      } else {\n        iconClass = 'icon-gf-warning';\n      }\n    } else {\n      iconClass = 'icon-gf-online';\n    }\n\n    if (this.panel.highlightNewEvents && this.isNewTrigger(trigger)) {\n      iconClass += ' zabbix-trigger--blinked';\n    }\n    return iconClass;\n  }\n\n  getAlertIconClassBySeverity(triggerSeverity) {\n    let iconClass = 'icon-gf-warning';\n    if (triggerSeverity.priority >= 3) {\n      iconClass = 'icon-gf-critical';\n    }\n    return iconClass;\n  }\n\n  getAlertStateClass(trigger) {\n    let statusClass = '';\n\n    if (trigger.value === '1') {\n      statusClass = 'alert-state-critical';\n    } else {\n      statusClass = 'alert-state-ok';\n    }\n\n    if (this.panel.highlightNewEvents && this.isNewTrigger(trigger)) {\n      statusClass += ' zabbix-trigger--blinked';\n    }\n\n    return statusClass;\n  }\n\n  getBackground(trigger) {\n    const mainColor = trigger.color;\n    const secondColor = this.contextSrv.user.lightTheme ? '#dde4ed' : '#262628';\n    if (this.contextSrv.user.lightTheme) {\n      return `linear-gradient(135deg, ${secondColor}, ${mainColor})`;\n    }\n    return `linear-gradient(135deg, ${mainColor}, ${secondColor})`;\n  }\n\n  isNewTrigger(trigger) {\n    try {\n      const highlightIntervalMs = utils.parseInterval(this.panel.highlightNewerThan || PANEL_DEFAULTS.highlightNewerThan);\n      const durationSec = (Date.now() - trigger.lastchangeUnix * 1000);\n      return durationSec < highlightIntervalMs;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    let panel = ctrl.panel;\n    let pageCount = 0;\n    let triggerList = ctrl.triggerList;\n\n    scope.$watchGroup(['ctrl.currentTriggersPage', 'ctrl.triggerList'], renderPanel);\n    elem.on('click', '.triggers-panel-page-link', switchPage);\n    ctrl.events.on('render', (renderData) => {\n      triggerList = renderData || triggerList;\n      renderPanel();\n    });\n\n    function getContentHeight() {\n      let panelHeight = ctrl.height;\n      if (pageCount > 1) {\n        panelHeight -= 36;\n      }\n      return panelHeight + 'px';\n    }\n\n    function switchPage(e) {\n      let el = $(e.currentTarget);\n      ctrl.pageIndex = (parseInt(el.text(), 10)-1);\n\n      let pageSize = panel.pageSize || 10;\n      let startPos = ctrl.pageIndex * pageSize;\n      let endPos = Math.min(startPos + pageSize, triggerList.length);\n      ctrl.currentTriggersPage = triggerList.slice(startPos, endPos);\n\n      scope.$apply(() => {\n        renderPanel();\n      });\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n\n      let pageSize = panel.pageSize || 5;\n      pageCount = Math.ceil(triggerList.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      let startPage = Math.max(ctrl.pageIndex - 3, 0);\n      let endPage = Math.min(pageCount, startPage + 9);\n\n      let paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        let activeClass = i === ctrl.pageIndex ? 'active' : '';\n        let pageLinkElem = $('<li><a class=\"triggers-panel-page-link pointer ' + activeClass + '\">' + (i+1) + '</a></li>');\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function setFontSize() {\n      const fontSize = parseInt(panel.fontSize.slice(0, panel.fontSize.length - 1));\n      let triggerCardElem = elem.find('.alert-rule-item');\n      if (fontSize && fontSize !== 100) {\n        triggerCardElem.find('.alert-rule-item__icon').css({\n          'font-size': fontSize + '%',\n          'margin': fontSize / 100 * 6 + 'px'\n        });\n        triggerCardElem.find('.alert-rule-item__name').css({'font-size': fontSize + '%'});\n        triggerCardElem.find('.alert-rule-item__text').css({'font-size': fontSize * 0.8 + '%'});\n        triggerCardElem.find('.zbx-trigger-lastchange').css({'font-size': fontSize * 0.8 + '%'});\n        triggerCardElem.find('.zbx-tag').css({'font-size': fontSize * 0.6 + '%'});\n        triggerCardElem.find('.zbx-tag').css({'line-height': fontSize / 100 * 16 + 'px'});\n      } else {\n        // remove css\n        triggerCardElem.find('.alert-rule-item__icon').css({'font-size': '', 'margin-right': ''});\n        triggerCardElem.find('.alert-rule-item__name').css({'font-size': ''});\n        triggerCardElem.find('.alert-rule-item__text').css({'font-size': ''});\n        triggerCardElem.find('.zbx-trigger-lastchange').css({'font-size': ''});\n        triggerCardElem.find('.zbx-tag').css({'font-size': ''});\n        triggerCardElem.find('.zbx-tag').css({'line-height': ''});\n      }\n    }\n\n    function renderPanel() {\n      let rootElem = elem.find('.triggers-panel-scroll');\n      let footerElem = elem.find('.triggers-panel-footer');\n      appendPaginationControls(footerElem);\n      rootElem.css({'max-height': getContentHeight()});\n      rootElem.css({'height': getContentHeight()});\n      setFontSize();\n      ctrl.renderingCompleted();\n    }\n\n    let unbindDestroy = scope.$on('$destroy', function() {\n      elem.off('click', '.triggers-panel-page-link');\n      unbindDestroy();\n    });\n  }\n}\n\nTriggerPanelCtrl.templateUrl = 'public/plugins/alexanderzobnin-zabbix-app/panel-triggers/partials/module.html';\n\nfunction filterTriggers(triggers, triggerFilter) {\n  if (utils.isRegex(triggerFilter)) {\n    return _.filter(triggers, function(trigger) {\n      return utils.buildRegex(triggerFilter).test(trigger.description);\n    });\n  } else {\n    return _.filter(triggers, function(trigger) {\n      return trigger.description === triggerFilter;\n    });\n  }\n}\n"]}